{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled16.ipynb",
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyNlquyQiCPArO1eoeXFlUSc",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/soumyb09/soumyb09/blob/master/7%20Python%20visualization%20tools\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_ljFJHVXRpoU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "c422fc39-d902-4320-b21f-ceda3c62a0c7"
      },
      "source": [
        "!ls"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "sample_data\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uyatjJtKTYme",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "2ec4220e-77d4-49b5-a491-5cdc8c6962cb"
      },
      "source": [
        "## Import up sound alert dependencies\n",
        "from IPython.display import Audio, display\n",
        "\n",
        "# sound file https://drive.google.com/file/d/1BxM9dufE2Lao9BH_Td2Fh4d_WQ9X_x0B/view?usp=sharing\n",
        "\n",
        "URL = \"https://drive.google.com/uc?export=download&id=1BxM9dufE2Lao9BH_Td2Fh4d_WQ9X_x0B\"\n",
        "print(URL)\n",
        "\n",
        "!wget 'https://drive.google.com/uc?export=download&id=1BxM9dufE2Lao9BH_Td2Fh4d_WQ9X_x0B' -o Bell.wav"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "https://drive.google.com/uc?export=download&id=1BxM9dufE2Lao9BH_Td2Fh4d_WQ9X_x0B\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fnXh84C8TZF2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def allDone():\n",
        "  #display(Audio(url='https://sound.peal.io/ps/audios/000/000/537/original/woo_vu_luvub_dub_dub.wav', autoplay=True))\n",
        "  #display(Audio(url='https://drive.google.com/uc?export=download&id=1BxM9dufE2Lao9BH_Td2Fh4d_WQ9X_x0B', autoplay=True))\n",
        "  display(Audio('Bell.wav', autoplay=True))\n",
        "## Insert whatever audio file you want above\n",
        "#allDone()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3X3Z7zHhT8aY",
        "colab_type": "text"
      },
      "source": [
        "\n",
        "Seven Python Visualisation Tools\n",
        "\n",
        "https://www.dataquest.io/blog/python-data-visualization-libraries/\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "71HDeQltUQid",
        "colab_type": "text"
      },
      "source": [
        "Loading Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0rzec-T5TZNa",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "outputId": "fc609a6c-c23a-4896-dc6f-e19434fabbeb"
      },
      "source": [
        "ls"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            " Bell.wav      'uc?export=download&id=1BxM9dufE2Lao9BH_Td2Fh4d_WQ9X_x0B'\n",
            " \u001b[0m\u001b[01;34msample_data\u001b[0m/\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xYbcAeACUMDC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 643
        },
        "outputId": "c83f5330-d30c-495b-dd38-76381e93ad0c"
      },
      "source": [
        "!wget https://raw.githubusercontent.com/jpatokal/openflights/master/data/airports.dat\n",
        "!wget https://raw.githubusercontent.com/jpatokal/openflights/master/data/airlines.dat\n",
        "!wget https://raw.githubusercontent.com/jpatokal/openflights/master/data/routes.dat"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--2020-02-05 17:06:41--  https://raw.githubusercontent.com/jpatokal/openflights/master/data/airports.dat\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 1127225 (1.1M) [text/plain]\n",
            "Saving to: ‘airports.dat’\n",
            "\n",
            "\rairports.dat          0%[                    ]       0  --.-KB/s               \rairports.dat        100%[===================>]   1.07M  --.-KB/s    in 0.08s   \n",
            "\n",
            "2020-02-05 17:06:41 (14.0 MB/s) - ‘airports.dat’ saved [1127225/1127225]\n",
            "\n",
            "--2020-02-05 17:06:44--  https://raw.githubusercontent.com/jpatokal/openflights/master/data/airlines.dat\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 396896 (388K) [text/plain]\n",
            "Saving to: ‘airlines.dat’\n",
            "\n",
            "airlines.dat        100%[===================>] 387.59K  --.-KB/s    in 0.07s   \n",
            "\n",
            "2020-02-05 17:06:44 (5.49 MB/s) - ‘airlines.dat’ saved [396896/396896]\n",
            "\n",
            "--2020-02-05 17:06:47--  https://raw.githubusercontent.com/jpatokal/openflights/master/data/routes.dat\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 2377148 (2.3M) [text/plain]\n",
            "Saving to: ‘routes.dat’\n",
            "\n",
            "routes.dat          100%[===================>]   2.27M  9.84MB/s    in 0.2s    \n",
            "\n",
            "2020-02-05 17:06:48 (9.84 MB/s) - ‘routes.dat’ saved [2377148/2377148]\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7MelGXUIUMFG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Import the pandas library.\n",
        "import pandas\n",
        "# Read in the airports data.\n",
        "airports = pandas.read_csv(\"airports.dat\", header=None, dtype=str)\n",
        "airports.columns = [\"id\", \"name\", \"city\", \"country\", \"code\", \"icao\", \"latitude\", \"longitude\", \"altitude\", \"offset\", \"dst\", \"timezone\", \"type\",\"source\"]\n",
        "# Read in the airlines data.\n",
        "airlines = pandas.read_csv(\"airlines.dat\", header=None, dtype=str)\n",
        "airlines.columns = [\"id\", \"name\", \"alias\", \"iata\", \"icao\", \"callsign\", \"country\", \"active\"]\n",
        "# Read in the routes data.\n",
        "routes = pandas.read_csv(\"routes.dat\", header=None, dtype=str)\n",
        "routes.columns = [\"airline\", \"airline_id\", \"source\", \"source_id\", \"dest\", \"dest_id\", \"codeshare\", \"stops\", \"equipment\"]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4mVqDkGmUMIO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "outputId": "ea20a110-2c9a-43b6-99e7-faf5ed6a0ae9"
      },
      "source": [
        "airports.head(3)"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>city</th>\n",
              "      <th>country</th>\n",
              "      <th>code</th>\n",
              "      <th>icao</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>altitude</th>\n",
              "      <th>offset</th>\n",
              "      <th>dst</th>\n",
              "      <th>timezone</th>\n",
              "      <th>type</th>\n",
              "      <th>source</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Goroka Airport</td>\n",
              "      <td>Goroka</td>\n",
              "      <td>Papua New Guinea</td>\n",
              "      <td>GKA</td>\n",
              "      <td>AYGA</td>\n",
              "      <td>-6.081689834590001</td>\n",
              "      <td>145.391998291</td>\n",
              "      <td>5282</td>\n",
              "      <td>10</td>\n",
              "      <td>U</td>\n",
              "      <td>Pacific/Port_Moresby</td>\n",
              "      <td>airport</td>\n",
              "      <td>OurAirports</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Madang Airport</td>\n",
              "      <td>Madang</td>\n",
              "      <td>Papua New Guinea</td>\n",
              "      <td>MAG</td>\n",
              "      <td>AYMD</td>\n",
              "      <td>-5.20707988739</td>\n",
              "      <td>145.789001465</td>\n",
              "      <td>20</td>\n",
              "      <td>10</td>\n",
              "      <td>U</td>\n",
              "      <td>Pacific/Port_Moresby</td>\n",
              "      <td>airport</td>\n",
              "      <td>OurAirports</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mount Hagen Kagamuga Airport</td>\n",
              "      <td>Mount Hagen</td>\n",
              "      <td>Papua New Guinea</td>\n",
              "      <td>HGU</td>\n",
              "      <td>AYMH</td>\n",
              "      <td>-5.826789855957031</td>\n",
              "      <td>144.29600524902344</td>\n",
              "      <td>5388</td>\n",
              "      <td>10</td>\n",
              "      <td>U</td>\n",
              "      <td>Pacific/Port_Moresby</td>\n",
              "      <td>airport</td>\n",
              "      <td>OurAirports</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  id                          name  ...     type       source\n",
              "0  1                Goroka Airport  ...  airport  OurAirports\n",
              "1  2                Madang Airport  ...  airport  OurAirports\n",
              "2  3  Mount Hagen Kagamuga Airport  ...  airport  OurAirports\n",
              "\n",
              "[3 rows x 14 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OD65sVSAUMA0",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "outputId": "7d101a49-eeab-4d62-827b-6acb0e839ab5"
      },
      "source": [
        "airlines.head(3)"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>alias</th>\n",
              "      <th>iata</th>\n",
              "      <th>icao</th>\n",
              "      <th>callsign</th>\n",
              "      <th>country</th>\n",
              "      <th>active</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>\\N</td>\n",
              "      <td>-</td>\n",
              "      <td>NaN</td>\n",
              "      <td>\\N</td>\n",
              "      <td>\\N</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Private flight</td>\n",
              "      <td>\\N</td>\n",
              "      <td>-</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>135 Airways</td>\n",
              "      <td>\\N</td>\n",
              "      <td>NaN</td>\n",
              "      <td>GNL</td>\n",
              "      <td>GENERAL</td>\n",
              "      <td>United States</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   id            name alias iata icao callsign        country active\n",
              "0  -1         Unknown    \\N    -  NaN       \\N             \\N      Y\n",
              "1   1  Private flight    \\N    -  NaN      NaN            NaN      Y\n",
              "2   2     135 Airways    \\N  NaN  GNL  GENERAL  United States      N"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Kmaa8V0sUoHY",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "outputId": "9b6add5e-fc62-41f4-a3cd-de5fe2daf557"
      },
      "source": [
        "routes.head(3)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>airline</th>\n",
              "      <th>airline_id</th>\n",
              "      <th>source</th>\n",
              "      <th>source_id</th>\n",
              "      <th>dest</th>\n",
              "      <th>dest_id</th>\n",
              "      <th>codeshare</th>\n",
              "      <th>stops</th>\n",
              "      <th>equipment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2B</td>\n",
              "      <td>410</td>\n",
              "      <td>AER</td>\n",
              "      <td>2965</td>\n",
              "      <td>KZN</td>\n",
              "      <td>2990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>CR2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2B</td>\n",
              "      <td>410</td>\n",
              "      <td>ASF</td>\n",
              "      <td>2966</td>\n",
              "      <td>KZN</td>\n",
              "      <td>2990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>CR2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2B</td>\n",
              "      <td>410</td>\n",
              "      <td>ASF</td>\n",
              "      <td>2966</td>\n",
              "      <td>MRV</td>\n",
              "      <td>2962</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>CR2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  airline airline_id source source_id dest dest_id codeshare stops equipment\n",
              "0      2B        410    AER      2965  KZN    2990       NaN     0       CR2\n",
              "1      2B        410    ASF      2966  KZN    2990       NaN     0       CR2\n",
              "2      2B        410    ASF      2966  MRV    2962       NaN     0       CR2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tEbdUgcWUoXZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "routes = routes[routes[\"airline_id\"] != \"\\\\N\"]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_LHnmtV8UzEE",
        "colab_type": "text"
      },
      "source": [
        "Route Length Distance Calculation"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sALqFy9mUocf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import math\n",
        "\n",
        "def haversine(lon1, lat1, lon2, lat2):\n",
        "    # Convert coordinates to floats.\n",
        "    lon1, lat1, lon2, lat2 = [float(lon1), float(lat1), float(lon2), float(lat2)]\n",
        "    # Convert to radians from degrees.\n",
        "    lon1, lat1, lon2, lat2 = map(math.radians, [lon1, lat1, lon2, lat2])\n",
        "    # Compute distance.\n",
        "    dlon = lon2 - lon1 \n",
        "    dlat = lat2 - lat1 \n",
        "    a = math.sin(dlat/2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon/2)**2\n",
        "    c = 2 * math.asin(math.sqrt(a)) \n",
        "    km = 6367 * c\n",
        "    return km"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J_q2A48IUofR",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def calc_dist(row):\n",
        "    dist = 0\n",
        "    try:\n",
        "        # Match source and destination to get coordinates.\n",
        "        source = airports[airports[\"id\"] == row[\"source_id\"]].iloc[0]\n",
        "        dest = airports[airports[\"id\"] == row[\"dest_id\"]].iloc[0]\n",
        "        # Use coordinates to compute distance.\n",
        "        dist = haversine(dest[\"longitude\"], dest[\"latitude\"], source[\"longitude\"], source[\"latitude\"])\n",
        "    except (ValueError, IndexError):\n",
        "        pass\n",
        "    return dist"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kPiLOKaJUoiQ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "22b8631c-9c1c-4713-c329-a7b6036ab4dc"
      },
      "source": [
        "#this will take some time ~ 3-5 mins\n",
        "from time import time\n",
        "t0 = time()\n",
        "route_lengths = routes.apply(calc_dist, axis=1)\n",
        "tt = time() - t0\n",
        "print(\"time required to calculate route lengths is \", tt, \" secs\")\n",
        "#allDone()"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "time required to calculate route lengths is  184.40560579299927  secs\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CixP4_MWUoly",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 127
        },
        "outputId": "de005e86-0aa6-4b7f-893c-d77b9c682f2a"
      },
      "source": [
        "route_lengths.head(5)"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    1505.879552\n",
              "1    1039.785086\n",
              "2     447.883531\n",
              "3     770.024740\n",
              "4    1337.791014\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vg7sz0tsVEzh",
        "colab_type": "text"
      },
      "source": [
        "1 Matplotlib - Histogram"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4SDu6iI0UoVp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "outputId": "4b110e30-cdba-4d39-bc05-d208f82890c4"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "plt.hist(route_lengths, bins=20)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([2.2631e+04, 1.9856e+04, 1.0061e+04, 5.3400e+03, 2.6230e+03,\n",
              "        1.1050e+03, 8.7800e+02, 1.0370e+03, 9.2600e+02, 7.8200e+02,\n",
              "        6.5500e+02, 5.5500e+02, 2.4900e+02, 2.4400e+02, 1.5400e+02,\n",
              "        4.4000e+01, 3.8000e+01, 2.0000e+00, 0.0000e+00, 4.0000e+00]),\n",
              " array([    0.        ,   803.60790186,  1607.21580372,  2410.82370558,\n",
              "         3214.43160744,  4018.0395093 ,  4821.64741116,  5625.25531302,\n",
              "         6428.86321489,  7232.47111675,  8036.07901861,  8839.68692047,\n",
              "         9643.29482233, 10446.90272419, 11250.51062605, 12054.11852791,\n",
              "        12857.72642977, 13661.33433163, 14464.94223349, 15268.55013535,\n",
              "        16072.15803721]),\n",
              " <a list of 20 Patch objects>)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYMAAAD4CAYAAAAO9oqkAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAARAUlEQVR4nO3de5CddX3H8fenRPBuEhPTNIldtLEz\n6IyIKcTRdvAWAjgNznQYmE6JSE1b0NHWaRu0UyzqDGgvytSiaU0NLXIpYskANk0zTm3/4BJQuUlk\nhVCSARIJgq0zrei3f5zfkpN1N3s7u2fDvl8zZ/Y53+f2Pb+cs589z/Ock1QVkqS57ef63YAkqf8M\nA0mSYSBJMgwkSRgGkiRgXr8bmKxFixbVwMBAv9uQpCPKHXfc8f2qWjy8fsSGwcDAADt37ux3G5J0\nREny8Eh1DxNJkgwDSZJhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJIkj+BPIUzGw8aZJr7v7ktN7\n2IkkzQ6+M5AkGQaSJMNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEY\nSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgSWIcYZBkRZKvJ7kvyb1JPtjqC5NsT/JA+7mg1ZPksiSD\nSe5KckLXtta35R9Isr6r/sYkd7d1LkuS6XiwkqSRjeedwTPAh6vqOGA1cEGS44CNwI6qWgnsaPcB\nTgVWttsG4HLohAdwEXAScCJw0VCAtGXe17Xe2qk/NEnSeI0ZBlX1aFXd2aZ/CHwHWAasA7a0xbYA\nZ7TpdcAV1XELMD/JUuAUYHtVHaiqJ4HtwNo276VVdUtVFXBF17YkSTNgQucMkgwAbwBuBZZU1aNt\n1mPAkja9DHika7U9rXa4+p4R6iPtf0OSnUl27t+/fyKtS5IOY954F0zyYuArwIeq6unuw/pVVUlq\nGvo7RFVtAjYBrFq1atr3N5KBjTdNet3dl5zew04kqXfG9c4gyfPoBMGVVXV9Kz/eDvHQfu5r9b3A\niq7Vl7fa4erLR6hLkmbIeK4mCvBF4DtV9Zdds7YCQ1cErQdu6Kqf064qWg081Q4nbQPWJFnQThyv\nAba1eU8nWd32dU7XtiRJM2A8h4neDPwWcHeSb7XaR4BLgGuTnAc8DJzZ5t0MnAYMAj8CzgWoqgNJ\nPg7c3pa7uKoOtOnzgS8BLwC+1m6SpBkyZhhU1X8Co133//YRli/gglG2tRnYPEJ9J/C6sXqRJE0P\nP4EsSTIMJEmGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhI\nkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIw\nkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAksQ4wiDJ5iT7ktzTVftYkr1JvtVup3XNuzDJYJJdSU7p\nqq9ttcEkG7vqxya5tdWvSXJ0Lx+gJGls43ln8CVg7Qj1v6qq49vtZoAkxwFnAa9t6/xNkqOSHAV8\nDjgVOA44uy0LcGnb1i8BTwLnTeUBSZImbswwqKpvAAfGub11wNVV9b9V9RAwCJzYboNV9WBV/R9w\nNbAuSYC3Ade19bcAZ0zwMUiSpmgq5wzen+SudhhpQastAx7pWmZPq41Wfznwg6p6ZlhdkjSDJhsG\nlwOvBo4HHgX+omcdHUaSDUl2Jtm5f//+mdilJM0JkwqDqnq8qn5SVT8F/pbOYSCAvcCKrkWXt9po\n9SeA+UnmDauPtt9NVbWqqlYtXrx4Mq1LkkYwqTBIsrTr7ruBoSuNtgJnJTkmybHASuA24HZgZbty\n6Gg6J5m3VlUBXwd+o62/HrhhMj1JkiZv3lgLJLkKOBlYlGQPcBFwcpLjgQJ2A78DUFX3JrkWuA94\nBrigqn7StvN+YBtwFLC5qu5tu/hj4OoknwC+CXyxZ49OkjQuY4ZBVZ09QnnUX9hV9UngkyPUbwZu\nHqH+IAcPM0mS+sBPIEuSDANJkmEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAk\nYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEg\nScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkhhHGCTZnGRfknu6aguTbE/y\nQPu5oNWT5LIkg0nuSnJC1zrr2/IPJFnfVX9jkrvbOpclSa8fpCTp8MbzzuBLwNphtY3AjqpaCexo\n9wFOBVa22wbgcuiEB3ARcBJwInDRUIC0Zd7Xtd7wfUmSptmYYVBV3wAODCuvA7a06S3AGV31K6rj\nFmB+kqXAKcD2qjpQVU8C24G1bd5Lq+qWqirgiq5tSZJmyLxJrrekqh5t048BS9r0MuCRruX2tNrh\n6ntGqI8oyQY67zh45StfOcnW+2dg401TWn/3Jaf3qBNJOtSUTyC3v+irB72MZ1+bqmpVVa1avHjx\nTOxSkuaEyYbB4+0QD+3nvlbfC6zoWm55qx2uvnyEuiRpBk02DLYCQ1cErQdu6Kqf064qWg081Q4n\nbQPWJFnQThyvAba1eU8nWd2uIjqna1uSpBky5jmDJFcBJwOLkuyhc1XQJcC1Sc4DHgbObIvfDJwG\nDAI/As4FqKoDST4O3N6Wu7iqhk5Kn0/niqUXAF9rN0nSDBozDKrq7FFmvX2EZQu4YJTtbAY2j1Df\nCbxurD4kSdPHTyBLkgwDSZJhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEY\nSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnC\nMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJKAeVNZOclu4IfAT4BnqmpVkoXA\nNcAAsBs4s6qeTBLgs8BpwI+A91TVnW0764E/aZv9RFVtmUpfz1UDG2+a9Lq7Lzm9h51Ieq7pxTuD\nt1bV8VW1qt3fCOyoqpXAjnYf4FRgZbttAC4HaOFxEXAScCJwUZIFPehLkjRO03GYaB0w9Jf9FuCM\nrvoV1XELMD/JUuAUYHtVHaiqJ4HtwNpp6EuSNIqphkEB/5rkjiQbWm1JVT3aph8DlrTpZcAjXevu\nabXR6j8jyYYkO5Ps3L9//xRblyQNmdI5A+AtVbU3ySuA7Unu755ZVZWkpriP7u1tAjYBrFq1qmfb\nlaS5bkrvDKpqb/u5D/gqnWP+j7fDP7Sf+9rie4EVXasvb7XR6pKkGTLpMEjyoiQvGZoG1gD3AFuB\n9W2x9cANbXorcE46VgNPtcNJ24A1SRa0E8drWk2SNEOmcphoCfDVzhWjzAO+XFX/kuR24Nok5wEP\nA2e25W+mc1npIJ1LS88FqKoDST4O3N6Wu7iqDkyhL0nSBE06DKrqQeD1I9SfAN4+Qr2AC0bZ1mZg\n82R7kSRNjZ9AliQZBpIkw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAk\nYRhIkjAMJEkYBpIkpvY/nekIMrDxpkmvu/uS03vYiaTZyHcGkiTDQJJkGEiSMAwkSRgGkiQMA0kS\nhoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIk/NZSjUO/vvF0Kvud6r6lucYw0HOWX9stjZ9hoGk1\n1b/uJc0Mw0Aage8qNNcYBlKPGSQ6EhkG0iziSXP1i5eWSpJmTxgkWZtkV5LBJBv73Y8kzSWz4jBR\nkqOAzwHvBPYAtyfZWlX39bcz6chyJF695aGt2WFWhAFwIjBYVQ8CJLkaWAcYBtJzXD8DzCA6aLaE\nwTLgka77e4CThi+UZAOwod397yS7Jrm/RcD3J7nudLKviZmNfc3GnsC+RpRLR531XB6vXxypOFvC\nYFyqahOwaarbSbKzqlb1oKWesq+JmY19zcaewL4mai72NVtOIO8FVnTdX95qkqQZMFvC4HZgZZJj\nkxwNnAVs7XNPkjRnzIrDRFX1TJL3A9uAo4DNVXXvNO5yyoeapol9Tcxs7Gs29gT2NVFzrq9U1XRt\nW5J0hJgth4kkSX1kGEiS5lYYzPRXXiRZkeTrSe5Lcm+SD7b6wiTbkzzQfi5o9SS5rPV3V5ITura1\nvi3/QJL1PervqCTfTHJju39sklvb/q9pJ/NJcky7P9jmD3Rt48JW35XklB70ND/JdUnuT/KdJG+a\nDeOV5Pfbv+E9Sa5K8vx+jFeSzUn2Jbmnq9az8UnyxiR3t3UuS5Ip9PXp9u94V5KvJpk/1jiM9hod\nbawn2lPXvA8nqSSLZsNYtfoH2njdm+RTMzlWAFTVnLjROTH9PeBVwNHAt4HjpnmfS4ET2vRLgO8C\nxwGfAja2+kbg0jZ9GvA1IMBq4NZWXwg82H4uaNMLetDfHwBfBm5s968FzmrTnwd+r02fD3y+TZ8F\nXNOmj2vjeAxwbBvfo6bY0xbgt9v00cD8fo8XnQ9FPgS8oGuc3tOP8QJ+DTgBuKer1rPxAW5ry6at\ne+oU+loDzGvTl3b1NeI4cJjX6GhjPdGeWn0FnYtVHgYWzZKxeivwb8Ax7f4rZnKsqmpOhcGbgG1d\n9y8ELpzhHm6g8/1Lu4ClrbYU2NWmvwCc3bX8rjb/bOALXfVDlptkL8uBHcDbgBvbE/r7XS/eZ8er\nvXDe1KbnteUyfAy7l5tkTy+j80s3w+p9HS8OfkJ+YXv8NwKn9Gu8gIFhv0h6Mj5t3v1d9UOWm2hf\nw+a9G7iyTY84DozyGj3cc3MyPQHXAa8HdnMwDPo6VnR+gb9jhOVmbKzm0mGikb7yYtlM7bwdKngD\ncCuwpKoebbMeA5a06dF6nI7ePwP8EfDTdv/lwA+q6pkR9vHs/tv8p9ryve7rWGA/8PfpHL76uyQv\nos/jVVV7gT8H/gt4lM7jv4P+j9eQXo3Psjbd6/4A3kvnr+fJ9HW45+aEJFkH7K2qbw+b1e+xeg3w\nq+3wzr8n+ZVJ9jXpsZpLYdA3SV4MfAX4UFU93T2vOvE9o9f3JnkXsK+q7pjJ/Y7DPDpvny+vqjcA\n/0PnsMez+jReC+h8ceKxwC8ALwLWzmQP49WP8RlLko8CzwBX9rmPFwIfAf60n32MYh6dd56rgT8E\nrh3vOYhemUth0JevvEjyPDpBcGVVXd/KjydZ2uYvBfaN0WOve38z8OtJdgNX0zlU9FlgfpKhDyJ2\n7+PZ/bf5LwOemIa+9gB7qurWdv86OuHQ7/F6B/BQVe2vqh8D19MZw36P15Bejc/eNt2z/pK8B3gX\n8JstqCbT1xOMPtYT8Wo6gf7t9txfDtyZ5Ocn0VOvx2oPcH113EbnHfuiSfQ1+bGa6PHKI/VGJ3kf\npPNkGDrh8tpp3meAK4DPDKt/mkNP+H2qTZ/OoSexbmv1hXSOpS9ot4eAhT3q8WQOnkD+Jw498XR+\nm76AQ0+IXtumX8uhJ7ceZOonkP8D+OU2/bE2Vn0dLzrfoHsv8MK2ry3AB/o1Xvzs8eaejQ8/e1L0\ntCn0tZbO19AvHrbciOPAYV6jo431RHsaNm83B88Z9Husfhe4uE2/hs4hoMzoWE3lhXuk3ehcMfBd\nOmfhPzoD+3sLnbfsdwHfarfT6BzX2wE8QOcKgqEnV+j8Jz/fA+4GVnVt673AYLud28MeT+ZgGLyq\nPcEH2xNq6MqG57f7g23+q7rW/2jrdxfjvJpijH6OB3a2Mfvn9gLs+3gBfwbcD9wD/EN7cc74eAFX\n0Tlv8WM6f02e18vxAVa1x/g94K8ZdjJ/gn0N0vmlNvTc//xY48Aor9HRxnqiPQ2bv5uDYdDvsToa\n+Me2vTuBt83kWFWVX0chSZpb5wwkSaMwDCRJhoEkyTCQJGEYSJIwDCRJGAaSJOD/AYibDWpzUJbl\nAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "S1_xRNXRVqY-",
        "colab_type": "text"
      },
      "source": [
        "2 Seaborn - Histogram"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OYcnEP8tVKvC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "outputId": "0345bfd5-7750-48ac-95fb-1cf609791957"
      },
      "source": [
        "import seaborn\n",
        "seaborn.distplot(route_lengths, bins=20)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4917e982e8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n17EAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sX09qjxFVv8M",
        "colab_type": "text"
      },
      "source": [
        "3 Bokeh - Histogram"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gdb1eWLUVK88",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 239
        },
        "outputId": "979ae9f9-4eda-4404-9cef-ebfa2ce4c577"
      },
      "source": [
        "!pip install bokeh"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: bokeh in /usr/local/lib/python3.6/dist-packages (1.4.0)\n",
            "Requirement already satisfied: numpy>=1.7.1 in /usr/local/lib/python3.6/dist-packages (from bokeh) (1.17.5)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from bokeh) (2.6.1)\n",
            "Requirement already satisfied: PyYAML>=3.10 in /usr/local/lib/python3.6/dist-packages (from bokeh) (3.13)\n",
            "Requirement already satisfied: six>=1.5.2 in /usr/local/lib/python3.6/dist-packages (from bokeh) (1.12.0)\n",
            "Requirement already satisfied: Jinja2>=2.7 in /usr/local/lib/python3.6/dist-packages (from bokeh) (2.11.1)\n",
            "Requirement already satisfied: packaging>=16.8 in /usr/local/lib/python3.6/dist-packages (from bokeh) (20.1)\n",
            "Requirement already satisfied: tornado>=4.3 in /usr/local/lib/python3.6/dist-packages (from bokeh) (4.5.3)\n",
            "Requirement already satisfied: pillow>=4.0 in /usr/local/lib/python3.6/dist-packages (from bokeh) (6.2.2)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.6/dist-packages (from Jinja2>=2.7->bokeh) (1.1.1)\n",
            "Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from packaging>=16.8->bokeh) (2.4.6)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cEEp3rSZVK_n",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "#https://towardsdatascience.com/data-visualization-with-bokeh-in-python-part-one-getting-started-a11655a467d4\n",
        "#https://towardsdatascience.com/data-visualization-with-bokeh-in-python-part-ii-interactions-a4cf994e2512\n",
        "\n",
        "route_hist, edges = np.histogram(route_lengths, \n",
        "                               bins = 20, \n",
        "                               range = [0, 20000])\n",
        "# Put the information in a dataframe\n",
        "route_hist_df = pd.DataFrame({'lengths': route_hist, \n",
        "                       'left': edges[:-1], \n",
        "                       'right': edges[1:]})"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pdNqO4_bVLDv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "outputId": "7902cdf4-e930-46d5-8c0d-61de590a44a3"
      },
      "source": [
        "route_hist_df.head(30)"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>lengths</th>\n",
              "      <th>left</th>\n",
              "      <th>right</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>28533</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20218</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>2000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8077</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>3000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3669</td>\n",
              "      <td>3000.0</td>\n",
              "      <td>4000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1293</td>\n",
              "      <td>4000.0</td>\n",
              "      <td>5000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1159</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>6000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1271</td>\n",
              "      <td>6000.0</td>\n",
              "      <td>7000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>975</td>\n",
              "      <td>7000.0</td>\n",
              "      <td>8000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>812</td>\n",
              "      <td>8000.0</td>\n",
              "      <td>9000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>544</td>\n",
              "      <td>9000.0</td>\n",
              "      <td>10000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>324</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>11000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>197</td>\n",
              "      <td>11000.0</td>\n",
              "      <td>12000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>88</td>\n",
              "      <td>12000.0</td>\n",
              "      <td>13000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>20</td>\n",
              "      <td>13000.0</td>\n",
              "      <td>14000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0</td>\n",
              "      <td>14000.0</td>\n",
              "      <td>15000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>2</td>\n",
              "      <td>15000.0</td>\n",
              "      <td>16000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>2</td>\n",
              "      <td>16000.0</td>\n",
              "      <td>17000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0</td>\n",
              "      <td>17000.0</td>\n",
              "      <td>18000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0</td>\n",
              "      <td>18000.0</td>\n",
              "      <td>19000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0</td>\n",
              "      <td>19000.0</td>\n",
              "      <td>20000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    lengths     left    right\n",
              "0     28533      0.0   1000.0\n",
              "1     20218   1000.0   2000.0\n",
              "2      8077   2000.0   3000.0\n",
              "3      3669   3000.0   4000.0\n",
              "4      1293   4000.0   5000.0\n",
              "5      1159   5000.0   6000.0\n",
              "6      1271   6000.0   7000.0\n",
              "7       975   7000.0   8000.0\n",
              "8       812   8000.0   9000.0\n",
              "9       544   9000.0  10000.0\n",
              "10      324  10000.0  11000.0\n",
              "11      197  11000.0  12000.0\n",
              "12       88  12000.0  13000.0\n",
              "13       20  13000.0  14000.0\n",
              "14        0  14000.0  15000.0\n",
              "15        2  15000.0  16000.0\n",
              "16        2  16000.0  17000.0\n",
              "17        0  17000.0  18000.0\n",
              "18        0  18000.0  19000.0\n",
              "19        0  19000.0  20000.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nfc3_Jg_VLHd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "ff798551-96df-488d-8139-39e77f865667"
      },
      "source": [
        "from bokeh.io import output_file, show, output_notebook\n",
        "from bokeh.plotting import figure\n",
        "\n",
        "\n",
        "# Create the blank plot\n",
        "p = figure(plot_height = 400, plot_width = 600, \n",
        "           title = 'Airline Route Length',\n",
        "           x_axis_label = 'Length of Flight', \n",
        "           y_axis_label = 'Number of Flights')\n",
        "\n",
        "# Add a quad glyph\n",
        "p.quad(bottom=0, top=route_hist_df['lengths'], \n",
        "       left=route_hist_df['left'], right=route_hist_df['right'], \n",
        "       fill_color='cyan', line_color='black')\n",
        "\n",
        "#output_file(\"hist.html\")\n",
        "output_notebook()\n",
        "\n",
        "show(p)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "\n",
              "(function(root) {\n",
              "  function now() {\n",
              "    return new Date();\n",
              "  }\n",
              "\n",
              "  var force = true;\n",
              "\n",
              "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
              "    root._bokeh_onload_callbacks = [];\n",
              "    root._bokeh_is_loading = undefined;\n",
              "  }\n",
              "\n",
              "  var JS_MIME_TYPE = 'application/javascript';\n",
              "  var HTML_MIME_TYPE = 'text/html';\n",
              "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
              "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
              "\n",
              "  /**\n",
              "   * Render data to the DOM node\n",
              "   */\n",
              "  function render(props, node) {\n",
              "    var script = document.createElement(\"script\");\n",
              "    node.appendChild(script);\n",
              "  }\n",
              "\n",
              "  /**\n",
              "   * Handle when an output is cleared or removed\n",
              "   */\n",
              "  function handleClearOutput(event, handle) {\n",
              "    var cell = handle.cell;\n",
              "\n",
              "    var id = cell.output_area._bokeh_element_id;\n",
              "    var server_id = cell.output_area._bokeh_server_id;\n",
              "    // Clean up Bokeh references\n",
              "    if (id != null && id in Bokeh.index) {\n",
              "      Bokeh.index[id].model.document.clear();\n",
              "      delete Bokeh.index[id];\n",
              "    }\n",
              "\n",
              "    if (server_id !== undefined) {\n",
              "      // Clean up Bokeh references\n",
              "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
              "      cell.notebook.kernel.execute(cmd, {\n",
              "        iopub: {\n",
              "          output: function(msg) {\n",
              "            var id = msg.content.text.trim();\n",
              "            if (id in Bokeh.index) {\n",
              "              Bokeh.index[id].model.document.clear();\n",
              "              delete Bokeh.index[id];\n",
              "            }\n",
              "          }\n",
              "        }\n",
              "      });\n",
              "      // Destroy server and session\n",
              "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
              "      cell.notebook.kernel.execute(cmd);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  /**\n",
              "   * Handle when a new output is added\n",
              "   */\n",
              "  function handleAddOutput(event, handle) {\n",
              "    var output_area = handle.output_area;\n",
              "    var output = handle.output;\n",
              "\n",
              "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
              "    if ((output.output_type != \"display_data\") || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n",
              "      return\n",
              "    }\n",
              "\n",
              "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
              "\n",
              "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
              "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
              "      // store reference to embed id on output_area\n",
              "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
              "    }\n",
              "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
              "      var bk_div = document.createElement(\"div\");\n",
              "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
              "      var script_attrs = bk_div.children[0].attributes;\n",
              "      for (var i = 0; i < script_attrs.length; i++) {\n",
              "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
              "      }\n",
              "      // store reference to server id on output_area\n",
              "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
              "    }\n",
              "  }\n",
              "\n",
              "  function register_renderer(events, OutputArea) {\n",
              "\n",
              "    function append_mime(data, metadata, element) {\n",
              "      // create a DOM node to render to\n",
              "      var toinsert = this.create_output_subarea(\n",
              "        metadata,\n",
              "        CLASS_NAME,\n",
              "        EXEC_MIME_TYPE\n",
              "      );\n",
              "      this.keyboard_manager.register_events(toinsert);\n",
              "      // Render to node\n",
              "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
              "      render(props, toinsert[toinsert.length - 1]);\n",
              "      element.append(toinsert);\n",
              "      return toinsert\n",
              "    }\n",
              "\n",
              "    /* Handle when an output is cleared or removed */\n",
              "    events.on('clear_output.CodeCell', handleClearOutput);\n",
              "    events.on('delete.Cell', handleClearOutput);\n",
              "\n",
              "    /* Handle when a new output is added */\n",
              "    events.on('output_added.OutputArea', handleAddOutput);\n",
              "\n",
              "    /**\n",
              "     * Register the mime type and append_mime function with output_area\n",
              "     */\n",
              "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
              "      /* Is output safe? */\n",
              "      safe: true,\n",
              "      /* Index of renderer in `output_area.display_order` */\n",
              "      index: 0\n",
              "    });\n",
              "  }\n",
              "\n",
              "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
              "  if (root.Jupyter !== undefined) {\n",
              "    var events = require('base/js/events');\n",
              "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
              "\n",
              "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
              "      register_renderer(events, OutputArea);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  \n",
              "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
              "    root._bokeh_timeout = Date.now() + 5000;\n",
              "    root._bokeh_failed_load = false;\n",
              "  }\n",
              "\n",
              "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
              "     \"<div style='background-color: #fdd'>\\n\"+\n",
              "     \"<p>\\n\"+\n",
              "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
              "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
              "     \"</p>\\n\"+\n",
              "     \"<ul>\\n\"+\n",
              "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
              "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
              "     \"</ul>\\n\"+\n",
              "     \"<code>\\n\"+\n",
              "     \"from bokeh.resources import INLINE\\n\"+\n",
              "     \"output_notebook(resources=INLINE)\\n\"+\n",
              "     \"</code>\\n\"+\n",
              "     \"</div>\"}};\n",
              "\n",
              "  function display_loaded() {\n",
              "    var el = document.getElementById(null);\n",
              "    if (el != null) {\n",
              "      el.textContent = \"BokehJS is loading...\";\n",
              "    }\n",
              "    if (root.Bokeh !== undefined) {\n",
              "      if (el != null) {\n",
              "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
              "      }\n",
              "    } else if (Date.now() < root._bokeh_timeout) {\n",
              "      setTimeout(display_loaded, 100)\n",
              "    }\n",
              "  }\n",
              "\n",
              "\n",
              "  function run_callbacks() {\n",
              "    try {\n",
              "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
              "        if (callback != null)\n",
              "          callback();\n",
              "      });\n",
              "    } finally {\n",
              "      delete root._bokeh_onload_callbacks\n",
              "    }\n",
              "    console.debug(\"Bokeh: all callbacks have finished\");\n",
              "  }\n",
              "\n",
              "  function load_libs(css_urls, js_urls, callback) {\n",
              "    if (css_urls == null) css_urls = [];\n",
              "    if (js_urls == null) js_urls = [];\n",
              "\n",
              "    root._bokeh_onload_callbacks.push(callback);\n",
              "    if (root._bokeh_is_loading > 0) {\n",
              "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
              "      return null;\n",
              "    }\n",
              "    if (js_urls == null || js_urls.length === 0) {\n",
              "      run_callbacks();\n",
              "      return null;\n",
              "    }\n",
              "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
              "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
              "\n",
              "    function on_load() {\n",
              "      root._bokeh_is_loading--;\n",
              "      if (root._bokeh_is_loading === 0) {\n",
              "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
              "        run_callbacks()\n",
              "      }\n",
              "    }\n",
              "\n",
              "    function on_error() {\n",
              "      console.error(\"failed to load \" + url);\n",
              "    }\n",
              "\n",
              "    for (var i = 0; i < css_urls.length; i++) {\n",
              "      var url = css_urls[i];\n",
              "      const element = document.createElement(\"link\");\n",
              "      element.onload = on_load;\n",
              "      element.onerror = on_error;\n",
              "      element.rel = \"stylesheet\";\n",
              "      element.type = \"text/css\";\n",
              "      element.href = url;\n",
              "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
              "      document.body.appendChild(element);\n",
              "    }\n",
              "\n",
              "    for (var i = 0; i < js_urls.length; i++) {\n",
              "      var url = js_urls[i];\n",
              "      var element = document.createElement('script');\n",
              "      element.onload = on_load;\n",
              "      element.onerror = on_error;\n",
              "      element.async = false;\n",
              "      element.src = url;\n",
              "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
              "      document.head.appendChild(element);\n",
              "    }\n",
              "  };\n",
              "\n",
              "  function inject_raw_css(css) {\n",
              "    const element = document.createElement(\"style\");\n",
              "    element.appendChild(document.createTextNode(css));\n",
              "    document.body.appendChild(element);\n",
              "  }\n",
              "\n",
              "  \n",
              "  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.4.0.min.js\"];\n",
              "  var css_urls = [];\n",
              "  \n",
              "\n",
              "  var inline_js = [\n",
              "    function(Bokeh) {\n",
              "      Bokeh.set_log_level(\"info\");\n",
              "    },\n",
              "    function(Bokeh) {\n",
              "    \n",
              "    \n",
              "    }\n",
              "  ];\n",
              "\n",
              "  function run_inline_js() {\n",
              "    \n",
              "    if (root.Bokeh !== undefined || force === true) {\n",
              "      \n",
              "    for (var i = 0; i < inline_js.length; i++) {\n",
              "      inline_js[i].call(root, root.Bokeh);\n",
              "    }\n",
              "    } else if (Date.now() < root._bokeh_timeout) {\n",
              "      setTimeout(run_inline_js, 100);\n",
              "    } else if (!root._bokeh_failed_load) {\n",
              "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
              "      root._bokeh_failed_load = true;\n",
              "    } else if (force !== true) {\n",
              "      var cell = $(document.getElementById(null)).parents('.cell').data().cell;\n",
              "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
              "    }\n",
              "\n",
              "  }\n",
              "\n",
              "  if (root._bokeh_is_loading === 0) {\n",
              "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
              "    run_inline_js();\n",
              "  } else {\n",
              "    load_libs(css_urls, js_urls, function() {\n",
              "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
              "      run_inline_js();\n",
              "    });\n",
              "  }\n",
              "}(window));"
            ],
            "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(null);\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (var i = 0; i < css_urls.length; i++) {\n      var url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.4.0.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "  <div class=\"bk-root\" id=\"54085e87-4915-4b84-a739-d6c55d4e6869\" data-root-id=\"1001\"></div>\n"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "(function(root) {\n",
              "  function embed_document(root) {\n",
              "    \n",
              "  var docs_json = {\"617a5d99-a491-4dec-871a-aa5d38e3d3dc\":{\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1012\",\"type\":\"LinearAxis\"}],\"center\":[{\"id\":\"1016\",\"type\":\"Grid\"},{\"id\":\"1021\",\"type\":\"Grid\"}],\"left\":[{\"id\":\"1017\",\"type\":\"LinearAxis\"}],\"plot_height\":400,\"renderers\":[{\"id\":\"1038\",\"type\":\"GlyphRenderer\"}],\"title\":{\"id\":\"1002\",\"type\":\"Title\"},\"toolbar\":{\"id\":\"1028\",\"type\":\"Toolbar\"},\"x_range\":{\"id\":\"1004\",\"type\":\"DataRange1d\"},\"x_scale\":{\"id\":\"1008\",\"type\":\"LinearScale\"},\"y_range\":{\"id\":\"1006\",\"type\":\"DataRange1d\"},\"y_scale\":{\"id\":\"1010\",\"type\":\"LinearScale\"}},\"id\":\"1001\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1022\",\"type\":\"PanTool\"},{\"attributes\":{\"bottom\":{\"value\":0},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"left\":{\"field\":\"left\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"right\":{\"field\":\"right\"},\"top\":{\"field\":\"top\"}},\"id\":\"1037\",\"type\":\"Quad\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"text\":\"Airline Route Length\"},\"id\":\"1002\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"1045\",\"type\":\"BoxAnnotation\"}},\"id\":\"1024\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"callback\":null},\"id\":\"1006\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1025\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"1035\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"1036\",\"type\":\"Quad\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1037\",\"type\":\"Quad\"},\"selection_glyph\":null,\"view\":{\"id\":\"1039\",\"type\":\"CDSView\"}},\"id\":\"1038\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1027\",\"type\":\"HelpTool\"},{\"attributes\":{\"bottom\":{\"value\":0},\"fill_color\":{\"value\":\"cyan\"},\"left\":{\"field\":\"left\"},\"right\":{\"field\":\"right\"},\"top\":{\"field\":\"top\"}},\"id\":\"1036\",\"type\":\"Quad\"},{\"attributes\":{},\"id\":\"1041\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1008\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1010\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"Length of Flight\",\"formatter\":{\"id\":\"1041\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1013\",\"type\":\"BasicTicker\"}},\"id\":\"1012\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"BasicTicker\"},{\"attributes\":{\"ticker\":{\"id\":\"1013\",\"type\":\"BasicTicker\"}},\"id\":\"1016\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1043\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Number of Flights\",\"formatter\":{\"id\":\"1043\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1018\",\"type\":\"BasicTicker\"}},\"id\":\"1017\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1018\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"dimension\":1,\"ticker\":{\"id\":\"1018\",\"type\":\"BasicTicker\"}},\"id\":\"1021\",\"type\":\"Grid\"},{\"attributes\":{\"callback\":null},\"id\":\"1004\",\"type\":\"DataRange1d\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":{\"value\":0.5},\"fill_color\":{\"value\":\"lightgrey\"},\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":{\"value\":1.0},\"line_color\":{\"value\":\"black\"},\"line_dash\":[4,4],\"line_width\":{\"value\":2},\"render_mode\":\"css\",\"right_units\":\"screen\",\"top_units\":\"screen\"},\"id\":\"1045\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"active_drag\":\"auto\",\"active_inspect\":\"auto\",\"active_multi\":null,\"active_scroll\":\"auto\",\"active_tap\":\"auto\",\"tools\":[{\"id\":\"1022\",\"type\":\"PanTool\"},{\"id\":\"1023\",\"type\":\"WheelZoomTool\"},{\"id\":\"1024\",\"type\":\"BoxZoomTool\"},{\"id\":\"1025\",\"type\":\"SaveTool\"},{\"id\":\"1026\",\"type\":\"ResetTool\"},{\"id\":\"1027\",\"type\":\"HelpTool\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"callback\":null,\"data\":{\"left\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAECPQAAAAAAAQJ9AAAAAAABwp0AAAAAAAECvQAAAAAAAiLNAAAAAAABwt0AAAAAAAFi7QAAAAAAAQL9AAAAAAACUwUAAAAAAAIjDQAAAAAAAfMVAAAAAAABwx0AAAAAAAGTJQAAAAAAAWMtAAAAAAABMzUAAAAAAAEDPQAAAAAAAmtBAAAAAAACU0UAAAAAAAI7SQA==\",\"dtype\":\"float64\",\"shape\":[20]},\"right\":{\"__ndarray__\":\"AAAAAABAj0AAAAAAAECfQAAAAAAAcKdAAAAAAABAr0AAAAAAAIizQAAAAAAAcLdAAAAAAABYu0AAAAAAAEC/QAAAAAAAlMFAAAAAAACIw0AAAAAAAHzFQAAAAAAAcMdAAAAAAABkyUAAAAAAAFjLQAAAAAAATM1AAAAAAABAz0AAAAAAAJrQQAAAAAAAlNFAAAAAAACO0kAAAAAAAIjTQA==\",\"dtype\":\"float64\",\"shape\":[20]},\"top\":[28533,20218,8077,3669,1293,1159,1271,975,812,544,324,197,88,20,0,2,2,0,0,0]},\"selected\":{\"id\":\"1047\",\"type\":\"Selection\"},\"selection_policy\":{\"id\":\"1046\",\"type\":\"UnionRenderers\"}},\"id\":\"1035\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1035\",\"type\":\"ColumnDataSource\"}},\"id\":\"1039\",\"type\":\"CDSView\"}],\"root_ids\":[\"1001\"]},\"title\":\"Bokeh Application\",\"version\":\"1.4.0\"}};\n",
              "  var render_items = [{\"docid\":\"617a5d99-a491-4dec-871a-aa5d38e3d3dc\",\"roots\":{\"1001\":\"54085e87-4915-4b84-a739-d6c55d4e6869\"}}];\n",
              "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
              "\n",
              "  }\n",
              "  if (root.Bokeh !== undefined) {\n",
              "    embed_document(root);\n",
              "  } else {\n",
              "    var attempts = 0;\n",
              "    var timer = setInterval(function(root) {\n",
              "      if (root.Bokeh !== undefined) {\n",
              "        clearInterval(timer);\n",
              "        embed_document(root);\n",
              "      } else {\n",
              "        attempts++;\n",
              "        if (attempts > 100) {\n",
              "          clearInterval(timer);\n",
              "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
              "        }\n",
              "      }\n",
              "    }, 10, root)\n",
              "  }\n",
              "})(window);"
            ],
            "application/vnd.bokehjs_exec.v0+json": ""
          },
          "metadata": {
            "tags": [],
            "application/vnd.bokehjs_exec.v0+json": {
              "id": "1001"
            }
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mjkZ0p5JWC73",
        "colab_type": "text"
      },
      "source": [
        "Bokeh - Bar Charts"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_6vgKxvLVLWU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "outputId": "5ab615ff-5f6d-487a-e1ce-5b054125a552"
      },
      "source": [
        "import numpy\n",
        "\n",
        "# Put relevant columns into a dataframe.\n",
        "route_length_df = pandas.DataFrame({\"length\": route_lengths, \"id\": routes[\"airline_id\"]})\n",
        "route_length_df.head(2)"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>length</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1505.879552</td>\n",
              "      <td>410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1039.785086</td>\n",
              "      <td>410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        length   id\n",
              "0  1505.879552  410\n",
              "1  1039.785086  410"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gHu0nmSNVLY5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "outputId": "8ee3aab1-8649-47eb-a960-3a79d119c1c5"
      },
      "source": [
        "# Compute the mean route length per airline.\n",
        "airline_route_lengths = route_length_df.groupby(\"id\").aggregate(numpy.mean)\n",
        "# Sort by length so we can make a better chart.\n",
        "#airline_route_lengths = airline_route_lengths.sort(\"length\", ascending=False)\n",
        "airline_route_lengths = airline_route_lengths.sort_values(\"length\", ascending=False)\n",
        "airline_route_lengths.head(2)"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>length</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11806</th>\n",
              "      <td>7261.375734</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>6332.122085</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            length\n",
              "id                \n",
              "11806  7261.375734\n",
              "3201   6332.122085"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8xbPhmA-VLba",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "outputId": "b98e7477-34a5-4f05-f5ae-c41be0e03fb8"
      },
      "source": [
        "#Simple Matplotlib\n",
        "plt.bar(range(airline_route_lengths.shape[0]), airline_route_lengths[\"length\"])"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 547 artists>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YloCC-8RVLeL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "outputId": "2fe1da0c-ac5d-4dd6-8846-bcbcb5a687cf"
      },
      "source": [
        "def lookup_name(row):\n",
        "    try:\n",
        "        # Match the row id to the id in the airlines dataframe so we can get the name.\n",
        "        name = airlines[\"name\"][airlines[\"id\"] == row[\"id\"]].iloc[0]\n",
        "    except (ValueError, IndexError):\n",
        "        name = \"\"\n",
        "    return name\n",
        "\n",
        "# Add the index (the airline ids) as a column.\n",
        "airline_route_lengths[\"id\"] = airline_route_lengths.index.copy()\n",
        "airline_route_lengths.head(3)\n"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>length</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11806</th>\n",
              "      <td>7261.375734</td>\n",
              "      <td>11806</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>6332.122085</td>\n",
              "      <td>3201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1008</th>\n",
              "      <td>5861.986606</td>\n",
              "      <td>1008</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            length     id\n",
              "id                       \n",
              "11806  7261.375734  11806\n",
              "3201   6332.122085   3201\n",
              "1008   5861.986606   1008"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yxS--n-hVLCI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "outputId": "af117715-d444-4b59-a607-5b77a7ed2000"
      },
      "source": [
        "# Find all the airline names.\n",
        "airline_route_lengths[\"name\"] = airline_route_lengths.apply(lookup_name, axis=1)\n",
        "\n",
        "airline_route_lengths.head(3)"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>length</th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11806</th>\n",
              "      <td>7261.375734</td>\n",
              "      <td>11806</td>\n",
              "      <td>Compagnie Africaine d\\\\'Aviation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>6332.122085</td>\n",
              "      <td>3201</td>\n",
              "      <td>LAN Argentina</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1008</th>\n",
              "      <td>5861.986606</td>\n",
              "      <td>1008</td>\n",
              "      <td>Albanian Airlines</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            length     id                              name\n",
              "id                                                         \n",
              "11806  7261.375734  11806  Compagnie Africaine d\\\\'Aviation\n",
              "3201   6332.122085   3201                     LAN Argentina\n",
              "1008   5861.986606   1008                 Albanian Airlines"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OJLdme12VK7A",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "airline_route_lengths.index = range(airline_route_lengths.shape[0])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_acFtxRWWrK4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "outputId": "f765a2ec-9f7e-4609-8ef4-ba52ded43fa7"
      },
      "source": [
        "airline_route_lengths.head(2)"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>length</th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7261.375734</td>\n",
              "      <td>11806</td>\n",
              "      <td>Compagnie Africaine d\\\\'Aviation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6332.122085</td>\n",
              "      <td>3201</td>\n",
              "      <td>LAN Argentina</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        length     id                              name\n",
              "0  7261.375734  11806  Compagnie Africaine d\\\\'Aviation\n",
              "1  6332.122085   3201                     LAN Argentina"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WIKm5gP2WvYT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "outputId": "efa1ce1c-9ebe-43a2-d2a3-9f1da1e82bca"
      },
      "source": [
        "#http://bokeh.pydata.org/en/latest/docs/user_guide/categorical.html\n",
        "#https://bokeh.pydata.org/en/latest/docs/user_guide/notebook.html#jupyterlab\n",
        "#---------\n",
        "import numpy as np\n",
        "from bokeh.io import output_notebook, show\n",
        "#from bokeh.charts import Bar, show\n",
        "from bokeh.plotting import figure\n",
        "\n",
        "output_notebook()\n",
        "\n",
        "#airline_route_lengths2 = airline_route_lengths[:10]\n",
        "\n",
        "airline_name = airline_route_lengths.name\n",
        "avg_route_length = airline_route_lengths.length\n",
        "\n",
        "p = figure(x_range=airline_name, plot_height=450, plot_width=1200, title=\"Airline Route Lengths\",\n",
        "           toolbar_location=None, tools=\"\")\n",
        "\n",
        "p.vbar(x=airline_name, top=avg_route_length, width=1.9)\n",
        "\n",
        "p.xgrid.grid_line_color = None\n",
        "p.y_range.start = 0\n",
        "#p.xaxis.major_label_orientation = \"vertical\"\n",
        "p.xaxis.major_label_orientation = math.pi/4\n",
        "\n",
        "\n",
        "show(p)"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "\n",
              "(function(root) {\n",
              "  function now() {\n",
              "    return new Date();\n",
              "  }\n",
              "\n",
              "  var force = true;\n",
              "\n",
              "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
              "    root._bokeh_onload_callbacks = [];\n",
              "    root._bokeh_is_loading = undefined;\n",
              "  }\n",
              "\n",
              "  var JS_MIME_TYPE = 'application/javascript';\n",
              "  var HTML_MIME_TYPE = 'text/html';\n",
              "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
              "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
              "\n",
              "  /**\n",
              "   * Render data to the DOM node\n",
              "   */\n",
              "  function render(props, node) {\n",
              "    var script = document.createElement(\"script\");\n",
              "    node.appendChild(script);\n",
              "  }\n",
              "\n",
              "  /**\n",
              "   * Handle when an output is cleared or removed\n",
              "   */\n",
              "  function handleClearOutput(event, handle) {\n",
              "    var cell = handle.cell;\n",
              "\n",
              "    var id = cell.output_area._bokeh_element_id;\n",
              "    var server_id = cell.output_area._bokeh_server_id;\n",
              "    // Clean up Bokeh references\n",
              "    if (id != null && id in Bokeh.index) {\n",
              "      Bokeh.index[id].model.document.clear();\n",
              "      delete Bokeh.index[id];\n",
              "    }\n",
              "\n",
              "    if (server_id !== undefined) {\n",
              "      // Clean up Bokeh references\n",
              "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
              "      cell.notebook.kernel.execute(cmd, {\n",
              "        iopub: {\n",
              "          output: function(msg) {\n",
              "            var id = msg.content.text.trim();\n",
              "            if (id in Bokeh.index) {\n",
              "              Bokeh.index[id].model.document.clear();\n",
              "              delete Bokeh.index[id];\n",
              "            }\n",
              "          }\n",
              "        }\n",
              "      });\n",
              "      // Destroy server and session\n",
              "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
              "      cell.notebook.kernel.execute(cmd);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  /**\n",
              "   * Handle when a new output is added\n",
              "   */\n",
              "  function handleAddOutput(event, handle) {\n",
              "    var output_area = handle.output_area;\n",
              "    var output = handle.output;\n",
              "\n",
              "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
              "    if ((output.output_type != \"display_data\") || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n",
              "      return\n",
              "    }\n",
              "\n",
              "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
              "\n",
              "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
              "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
              "      // store reference to embed id on output_area\n",
              "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
              "    }\n",
              "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
              "      var bk_div = document.createElement(\"div\");\n",
              "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
              "      var script_attrs = bk_div.children[0].attributes;\n",
              "      for (var i = 0; i < script_attrs.length; i++) {\n",
              "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
              "      }\n",
              "      // store reference to server id on output_area\n",
              "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
              "    }\n",
              "  }\n",
              "\n",
              "  function register_renderer(events, OutputArea) {\n",
              "\n",
              "    function append_mime(data, metadata, element) {\n",
              "      // create a DOM node to render to\n",
              "      var toinsert = this.create_output_subarea(\n",
              "        metadata,\n",
              "        CLASS_NAME,\n",
              "        EXEC_MIME_TYPE\n",
              "      );\n",
              "      this.keyboard_manager.register_events(toinsert);\n",
              "      // Render to node\n",
              "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
              "      render(props, toinsert[toinsert.length - 1]);\n",
              "      element.append(toinsert);\n",
              "      return toinsert\n",
              "    }\n",
              "\n",
              "    /* Handle when an output is cleared or removed */\n",
              "    events.on('clear_output.CodeCell', handleClearOutput);\n",
              "    events.on('delete.Cell', handleClearOutput);\n",
              "\n",
              "    /* Handle when a new output is added */\n",
              "    events.on('output_added.OutputArea', handleAddOutput);\n",
              "\n",
              "    /**\n",
              "     * Register the mime type and append_mime function with output_area\n",
              "     */\n",
              "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
              "      /* Is output safe? */\n",
              "      safe: true,\n",
              "      /* Index of renderer in `output_area.display_order` */\n",
              "      index: 0\n",
              "    });\n",
              "  }\n",
              "\n",
              "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
              "  if (root.Jupyter !== undefined) {\n",
              "    var events = require('base/js/events');\n",
              "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
              "\n",
              "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
              "      register_renderer(events, OutputArea);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  \n",
              "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
              "    root._bokeh_timeout = Date.now() + 5000;\n",
              "    root._bokeh_failed_load = false;\n",
              "  }\n",
              "\n",
              "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
              "     \"<div style='background-color: #fdd'>\\n\"+\n",
              "     \"<p>\\n\"+\n",
              "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
              "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
              "     \"</p>\\n\"+\n",
              "     \"<ul>\\n\"+\n",
              "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
              "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
              "     \"</ul>\\n\"+\n",
              "     \"<code>\\n\"+\n",
              "     \"from bokeh.resources import INLINE\\n\"+\n",
              "     \"output_notebook(resources=INLINE)\\n\"+\n",
              "     \"</code>\\n\"+\n",
              "     \"</div>\"}};\n",
              "\n",
              "  function display_loaded() {\n",
              "    var el = document.getElementById(null);\n",
              "    if (el != null) {\n",
              "      el.textContent = \"BokehJS is loading...\";\n",
              "    }\n",
              "    if (root.Bokeh !== undefined) {\n",
              "      if (el != null) {\n",
              "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
              "      }\n",
              "    } else if (Date.now() < root._bokeh_timeout) {\n",
              "      setTimeout(display_loaded, 100)\n",
              "    }\n",
              "  }\n",
              "\n",
              "\n",
              "  function run_callbacks() {\n",
              "    try {\n",
              "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
              "        if (callback != null)\n",
              "          callback();\n",
              "      });\n",
              "    } finally {\n",
              "      delete root._bokeh_onload_callbacks\n",
              "    }\n",
              "    console.debug(\"Bokeh: all callbacks have finished\");\n",
              "  }\n",
              "\n",
              "  function load_libs(css_urls, js_urls, callback) {\n",
              "    if (css_urls == null) css_urls = [];\n",
              "    if (js_urls == null) js_urls = [];\n",
              "\n",
              "    root._bokeh_onload_callbacks.push(callback);\n",
              "    if (root._bokeh_is_loading > 0) {\n",
              "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
              "      return null;\n",
              "    }\n",
              "    if (js_urls == null || js_urls.length === 0) {\n",
              "      run_callbacks();\n",
              "      return null;\n",
              "    }\n",
              "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
              "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
              "\n",
              "    function on_load() {\n",
              "      root._bokeh_is_loading--;\n",
              "      if (root._bokeh_is_loading === 0) {\n",
              "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
              "        run_callbacks()\n",
              "      }\n",
              "    }\n",
              "\n",
              "    function on_error() {\n",
              "      console.error(\"failed to load \" + url);\n",
              "    }\n",
              "\n",
              "    for (var i = 0; i < css_urls.length; i++) {\n",
              "      var url = css_urls[i];\n",
              "      const element = document.createElement(\"link\");\n",
              "      element.onload = on_load;\n",
              "      element.onerror = on_error;\n",
              "      element.rel = \"stylesheet\";\n",
              "      element.type = \"text/css\";\n",
              "      element.href = url;\n",
              "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
              "      document.body.appendChild(element);\n",
              "    }\n",
              "\n",
              "    for (var i = 0; i < js_urls.length; i++) {\n",
              "      var url = js_urls[i];\n",
              "      var element = document.createElement('script');\n",
              "      element.onload = on_load;\n",
              "      element.onerror = on_error;\n",
              "      element.async = false;\n",
              "      element.src = url;\n",
              "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
              "      document.head.appendChild(element);\n",
              "    }\n",
              "  };\n",
              "\n",
              "  function inject_raw_css(css) {\n",
              "    const element = document.createElement(\"style\");\n",
              "    element.appendChild(document.createTextNode(css));\n",
              "    document.body.appendChild(element);\n",
              "  }\n",
              "\n",
              "  \n",
              "  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.4.0.min.js\"];\n",
              "  var css_urls = [];\n",
              "  \n",
              "\n",
              "  var inline_js = [\n",
              "    function(Bokeh) {\n",
              "      Bokeh.set_log_level(\"info\");\n",
              "    },\n",
              "    function(Bokeh) {\n",
              "    \n",
              "    \n",
              "    }\n",
              "  ];\n",
              "\n",
              "  function run_inline_js() {\n",
              "    \n",
              "    if (root.Bokeh !== undefined || force === true) {\n",
              "      \n",
              "    for (var i = 0; i < inline_js.length; i++) {\n",
              "      inline_js[i].call(root, root.Bokeh);\n",
              "    }\n",
              "    } else if (Date.now() < root._bokeh_timeout) {\n",
              "      setTimeout(run_inline_js, 100);\n",
              "    } else if (!root._bokeh_failed_load) {\n",
              "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
              "      root._bokeh_failed_load = true;\n",
              "    } else if (force !== true) {\n",
              "      var cell = $(document.getElementById(null)).parents('.cell').data().cell;\n",
              "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
              "    }\n",
              "\n",
              "  }\n",
              "\n",
              "  if (root._bokeh_is_loading === 0) {\n",
              "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
              "    run_inline_js();\n",
              "  } else {\n",
              "    load_libs(css_urls, js_urls, function() {\n",
              "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
              "      run_inline_js();\n",
              "    });\n",
              "  }\n",
              "}(window));"
            ],
            "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(null);\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (var i = 0; i < css_urls.length; i++) {\n      var url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.4.0.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "  <div class=\"bk-root\" id=\"852368d9-6c34-4a55-8a91-dfc98d9e28b0\" data-root-id=\"1096\"></div>\n"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "(function(root) {\n",
              "  function embed_document(root) {\n",
              "    \n",
              "  var docs_json = {\"a114f2f4-701a-4944-b4d6-0eeed08865e5\":{\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1107\",\"type\":\"CategoricalAxis\"}],\"center\":[{\"id\":\"1110\",\"type\":\"Grid\"},{\"id\":\"1115\",\"type\":\"Grid\"}],\"left\":[{\"id\":\"1111\",\"type\":\"LinearAxis\"}],\"plot_height\":450,\"plot_width\":1200,\"renderers\":[{\"id\":\"1120\",\"type\":\"GlyphRenderer\"}],\"title\":{\"id\":\"1097\",\"type\":\"Title\"},\"toolbar\":{\"id\":\"1116\",\"type\":\"Toolbar\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1099\",\"type\":\"FactorRange\"},\"x_scale\":{\"id\":\"1103\",\"type\":\"CategoricalScale\"},\"y_range\":{\"id\":\"1101\",\"type\":\"DataRange1d\"},\"y_scale\":{\"id\":\"1105\",\"type\":\"LinearScale\"}},\"id\":\"1096\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"text\":\"Airline Route Lengths\"},\"id\":\"1097\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1105\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1103\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"top\":{\"field\":\"top\"},\"width\":{\"value\":1.9},\"x\":{\"field\":\"x\"}},\"id\":\"1119\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"1136\",\"type\":\"Selection\"},{\"attributes\":{\"callback\":null,\"data\":{\"top\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"shape\":[547]},\"x\":[\"Compagnie Africaine d\\\\\\\\'Aviation\",\"LAN Argentina\",\"Albanian Airlines\",\"Arkefly\",\"Emirates\",\"AirAsia X\",\"XL Airways France\",\"SmartLynx Airlines\",\"Air Tahiti Nui\",\"Corsairfly\",\"Air Mauritius\",\"Air Transat\",\"Singapore Airlines\",\"Air Cara\\u00efbes\",\"Air Italy\",\"Hawaiian Airlines\",\"El Al Israel Airlines\",\"Proflight Commuter Services\",\"Cathay Pacific\",\"Virgin Atlantic Airways\",\"Thai Airways International\",\"Etihad Airways\",\"Qatar Airways\",\"Korean Air\",\"Transaero Airlines\",\"Finnair\",\"Scoot\",\"Condor Flugdienst\",\"EVA Air\",\"British Airways\",\"Mahan Air\",\"Thomas Cook Airlines\",\"Biman Bangladesh Airlines\",\"Overland Airways\",\"Qantas\",\"Santa Barbara Airlines\",\"Thomsonfly\",\"SriLankan Airlines\",\"Turkmenistan Airlines\",\"Air Seychelles\",\"Nepal Airlines\",\"Gabon Airlines\",\"TAP Portugal\",\"Icelandair\",\"Cubana de Aviaci\\u00f3n\",\"Virgin America\",\"China Airlines\",\"Lufthansa\",\"Philippine Airlines\",\"Blue Panorama Airlines\",\"BusinessAir\",\"Royal Brunei Airlines\",\"South African Airways\",\"Yangon Airways\",\"Japan Airlines\",\"Jetstar Airways\",\"Air Caledonie International\",\"Uzbekistan Airways\",\"MIAT Mongolian Airlines\",\"Swiss International Air Lines\",\"Grupo TACA\",\"Saudi Arabian Airlines\",\"Air Europa\",\"JetBlue Airways\",\"Aeroflot Russian Airlines\",\"Atlantis European Airways\",\"Asiana Airlines\",\"Kuwait Airways\",\"Salzburg arrows\",\"KLM Royal Dutch Airlines\",\"All Nippon Airways\",\"Virgin Australia\",\"Transavia France\",\"Air Canada\",\"bmibaby\",\"Air New Zealand\",\"Egyptair\",\"Belair Airlines\",\"Oman Air\",\"Delta Air Lines\",\"United Airlines\",\"Ural Airlines\",\"TUIfly\",\"S7 Airlines\",\"Air Bourbon\",\"Air France\",\"Malaysia Airlines\",\"Iberia Airlines\",\"American Airlines\",\"L\",\"Pakistan International Airlines\",\"Varig Log\",\"Kenya Airways\",\"Moskovia Airlines\",\"Tajik Air\",\"Royal Jordanian\",\"TAAG Angola Airlines\",\"TAM Brazilian Airlines\",\"Comores Airlines\",\"Brussels Airlines\",\"Turkish Airlines\",\"Germania\",\"Gulf Air Bahrain\",\"Air India Limited\",\"Air Astana\",\"Jet2.com\",\"Azerbaijan Airlines\",\"Air Austral\",\"Alitalia\",\"Jin Air\",\"US Airways\",\"LAN Airlines\",\"Air India Express\",\"Air Arabia\",\"Jetstar Asia Airways\",\"NordStar Airlines\",\"Helvetic Airways\",\"Caribbean Airlines\",\"Tiger Airways\",\"Fly Dubai\",\"Cyprus Turkish Airlines\",\"Norwegian Air Shuttle\",\"Royal Air Maroc\",\"Air Florida\",\"Ethiopian Airlines\",\"Vietnam Airlines\",\"Garuda Indonesia\",\"Copa Airlines\",\"WestJet\",\"Sun Country Airlines\",\"Aerolane\",\"Hong Kong Express Airways\",\"Air Armenia\",\"Shaheen Air International\",\"SilkAir\",\"Air Berlin\",\"Georgian Airways\",\"Middle East Airlines\",\"Air China\",\"Avianca - Aerovias Nacionales de Colombia\",\"Surinam Airways\",\"Air Pacific\",\"TACV\",\"SunExpress\",\"SATA International\",\"Aerolineas Argentinas\",\"Maxair\",\"Harmony Airways\",\"Rwandair Express\",\"Alrosa Mirny Air Enterprise\",\"Cyprus Airways\",\"Ukraine International Airlines\",\"Air Arabia Maroc\",\"Nas Air\",\"Transavia Holland\",\"Aircompany Yakutia\",\"AeroM\\u00e9xico\",\"Alaska Airlines\",\"City Airways\",\"Air Nippon\",\"Air Malta\",\"Aer Lingus\",\"Niki\",\"Tunisair\",\"Air Koryo\",\"Israir\",\"Volaris\",\"Jeju Air\",\"Apache Air\",\"Zest Air\",\"Spirit Airlines\",\"Air Busan\",\"Yemenia\",\"Sat Airlines\",\"Interlink Airlines\",\"Jet Airways\",\"Czech Airlines\",\"Orenburg Airlines\",\"Scandinavian Airlines System\",\"Austrian Airlines\",\"Gazpromavia\",\"Mandala Airlines\",\"Tiger Airways Australia\",\"Air Baltic\",\"Belavia Belarusian Airlines\",\"Hainan Airlines\",\"Allegiant Air\",\"Air Moldova\",\"Atlant-Soyuz Airlines\",\"Primaris Airlines\",\"Air Arabia Egypt\",\"Nouvel Air Tunisie\",\"Frontier Airlines\",\"Dragonair\",\"Ryanair\",\"Wizz Air Ukraine\",\"Air Macau\",\"Rossiya-Russian Airlines\",\"Interair South Africa\",\"Arrow Air\",\"Maastricht Airlines\",\"China Southern Airlines\",\"Malindo Air\",\"China SSS\",\"Nauru Air Corporation\",\"Air North Charter - Canada\",\"China Eastern Airlines\",\"Eastar Jet\",\"Sudan Airways\",\"Air Namibia\",\"AirTran Airways\",\"easyJet\",\"Southwest Airlines\",\"United Airways\",\"LOT Polish Airlines\",\"Ariana Afghan Airlines\",\"Wizz Air\",\"Luxair\",\"Ciel Canadien\",\"Orient Thai Airlines\",\"Servicios de Transportes A\",\"Meridiana\",\"Pegasus Airlines\",\"Zoom Airlines\",\"Carpatair\",\"AirAsia\",\"Bulgaria Air\",\"Astrakhan Airlines\",\"Bangkok Airways\",\"Valuair\",\"Sichuan Airlines\",\"Iran Air\",\"Indonesia AirAsia\",\"Hong Kong Airlines\",\"Asia Wings\",\"Aegean Airlines\",\"Thai AirAsia\",\"Zip\",\"Afriqiyah Airways\",\"Arkia Israel Airlines\",\"TAM Mercosur\",\"Japan Asia Airways\",\"Aigle Azur\",\"Air Madagascar\",\"Formosa Airlines\",\"Jazeera Airways\",\"Saratov Aviation Division\",\"Daallo Airlines\",\"Nile Air\",\"Juneyao Airlines\",\"Air One\",\"Air Algerie\",\"Express One International\",\"Shenzhen Airlines\",\"City Connexion Airlines\",\"Flightlink Tanzania\",\"Japan Air System\",\"Canadian National Airways\",\"Omni Air International\",\"Tarom\",\"Travel Service\",\"Air Niugini\",\"Tway Airlines\",\"Kam Air\",\"Virgin Express\",\"Shanghai Airlines\",\"Mango\",\"West Air China\",\"IzAvia\",\"Isles of Scilly Skybus\",\"Xiamen Airlines\",\"Germanwings\",\"Montenegro Airlines\",\"TransHolding System\",\"Nasair\",\"Oceanair\",\"Interjet (ABC Aerolineas)\",\"Atlasjet\",\"Cebu Pacific\",\"Air Lituanica\",\"Cargo Plus Aviation\",\"Japan Transocean Air\",\"KSY\",\"Senegal Airlines\",\"TransAsia Airways\",\"Druk Air\",\"Mauritania Airlines International\",\"Starline.kz\",\"Aerocondor\",\"Pacific East Asia Cargo Airlines\",\"AlMasria Universal Airlines\",\"China United\",\"Estonian Air\",\"World Scale Airlines\",\"South East Asian Airlines\",\"Camair-co\",\"Homer Air\",\"Libyan Arab Airlines\",\"Polet Airlines (Priv)\",\"Cambodia Angkor Air (K6)\",\"Onur Air\",\"Cargoitalia\",\"Rainbow Air Polynesia\",\"Uni Air\",\"Air Philippines\",\"Shandong Airlines\",\"Caucasus Airlines\",\"Air Serbia\",\"Empresa Ecuatoriana De Aviacion\",\"Peach Aviation\",\"Potomac Air\",\"VOLOTEA Airways\",\"Dennis Sky\",\"BQB Lineas Aereas\",\"Comair\",\"Safi Airlines\",\"Scat Air\",\"Go Air\",\"Eurolot\",\"East African\",\"BRA-Transportes Aereos\",\"IndiGo Airlines\",\"Birmingham European\",\"Atlantic Airways\",\"ZABAIKAL AIRLINES\",\"Air Foyle\",\"Hapagfly\",\"Pinnacle Airlines\",\"ALAK\",\"Far Eastern Air Transport\",\"Myway Airlines\",\"Genesis\",\"Air Mozambique\",\"Air Tindi\",\"Conviasa\",\"Aero-Service\",\"Citilink Indonesia\",\"Aeroflot-Nord\",\"Skymark Airlines\",\"Adria Airways\",\"Hokkaido International Airlines\",\"Severstal Air Company\",\"Eagle Atlantic Airlines\",\"Pal airlines\",\"Airnorth\",\"Insel Air (7I/INC) (Priv)\",\"Cayman Airways\",\"Mandarin Airlines\",\"Sriwijaya Air\",\"Lion Mentari Airlines\",\"Air Botswana\",\"MexicanaLink\",\"Air Burkina\",\"Air Sicilia\",\"Cameroon Airlines\",\"Croatia Airlines\",\"Air Saint Pierre\",\"Excel Airways\",\"Sky Airline\",\"TAME\",\"Air Bangladesh\",\"Star Flyer\",\"Iran Aseman Airlines\",\"Royal Air Cambodge\",\"Airlines Of Tasmania\",\"Azul\",\"SkyWork Airlines \",\"Piedmont Airlines (1948-1989)\",\"Air Bosna\",\"Baikotovitchestrian Airlines \",\"Spicejet\",\"Porter Airlines\",\"Jetstar Pacific\",\"Aerolineas Galapagos (Aerogal)\",\"Northern Dene Airways\",\"Air Sahara\",\"Royal Falcon\",\"Motor Sich\",\"Air Zimbabwe\",\"Lao Airlines\",\"UTair-Express\",\"Peruvian Airlines\",\"LSM Airlines\",\"Binter Canarias\",\"Regional Air Iceland\",\"Canadian North\",\"First Air\",\"Airlinair\",\"Corse-Mediterranee\",\"Abu Dhabi Amiri Flight\",\"Peninsula Airways\",\"Ibex Airlines\",\"Intersky\",\"Volotea Costa Rica\",\"Huaxia\",\"Olympic Airlines\",\"Hawkair\",\"Bahamasair\",\"Malm\\u00f6 Aviation\",\"Maldivian\",\"Aeromar\",\"Air Europe\",\"Flybe\",\"Nok Air\",\"Precision Air\",\"Metro Batavia\",\"Air Dolomiti\",\"Chicago Express\",\"Flightline\",\"Changan Airlines\",\"CityJet\",\"Kish Air\",\"Marusya Airways\",\"Estafeta Carga Aerea\",\"Flybaboo\",\"Marysya Airlines\",\"Hankook Airline\",\"Fuji Dream Airlines\",\"Omskavia Airline\",\"Air Iceland\",\"Air Antilles Express\",\"TRIP Linhas A\",\"Aero Lanka\",\"Northwestern Air\",\"Star Peru (2I)\",\"Virgin Pacific\",\"Berjaya Air\",\"Hex'Air\",\"Twin Jet\",\"Air Bagan\",\"Skynet Airlines\",\"Aereonautica militare\",\"Aserca Airlines\",\"Abaet\",\"Air Sinai\",\"Eastern Airways\",\"Amaszonas\",\"Air Rarotonga\",\"Askari Aviation\",\"Nationwide Airlines\",\"Boutique Air (Priv)\",\"Eurowings\",\"Solomon Airlines\",\"Eagle Air\",\"Regional Express\",\"All America\",\"Firefly\",\"FlyNordic\",\"Tuninter\",\"Fly540\",\"Southern Winds Airlines\",\"Airlines PNG\",\"Illinois Airways\",\"Golden Air\",\"Aero Condor Peru\",\"Asian Wings Airways\",\"Silver Airways (3M)\",\"NextJet\",\"Air Tahiti\",\"SATENA\",\"Fly One\",\"AeroWorld \",\"BVI Airways\",\"Air Vanuatu\",\"Starbow Airlines\",\"Great Lakes Airlines\",\"Air Mandalay\",\"Alaska Central Express\",\"Mongolian International Air Lines \",\"ABSA - Aerolinhas Brasileiras\",\"T.J. Air\",\"Air Atlanta Icelandic\",\"Leeward Islands Air Transport\",\"Seaborne Airlines\",\"Pacific Coastal Airline\",\"TUR Avrupa Hava Yollar\\u00c4\\u00b1\",\"Big Sky Airlines\",\"Bearskin Lake Air Service\",\"Tropic Air\",\"Air Choice One\",\"Patriot Airways\",\"Fly Air\",\"Wider\\u00f8e\",\"Hello\",\"Aurigny Air Services\",\"DAT Danish Air Transport\",\"Sharp Airlines\",\"Arik Niger\",\"Yeti Airways\",\"Viking Hellas\",\"SeaPort Airlines\",\"SATA Air Acores\",\"Skyservice Airlines\",\"Salmon Air\",\"NHT Lineas Aereas\",\"Cape Air\",\"Fly 6ix\",\"Windward Islands Airways\",\"China United Airlines\",\"Star1 Airlines\",\"Shuttle America\",\"Pacific Wings\",\"Aeroline GmbH\",\"Iberworld\",\"FlyLal\",\"Amerijet International\",\"Air Greenland\",\"LACSA\",\"VRG Linhas Aereas\",\"Zambia Skyways\",\"VivaColombia\",\"Aeroper\",\"SkyBahamas Airlines\",\"Tiara Air\",\"Chitaavia\",\"Astral Aviation\",\"Island Air (WP)\",\"Euro Exec Express\",\"CAL Cargo Air Lines\",\"Catovair\",\"Benin Golf Air\",\"SENIC AIRLINES\",\"Era Alaska\",\"Aero Flight\",\"Bering Air\",\"Maya Island Air\",\"Georgian National Airlines\",\"Helijet\",\"International AirLink\",\"Sibaviatrans\",\"WebJet Linhas A\",\"Reem Air\",\"PB Air\",\"PAN Air\",\"Alaska Seaplane Service\",\"40-Mile Air\",\"Airbus France\",\"Astair\",\"Linhas A\",\"Kenmore Air\",\"SOCHI AIR CHATER\",\"Atlantic Air Cargo\",\"Air Salone\",\"Fly Colombia ( Interliging Flights )\",\"Avient Aviation\",\"Midwest Airlines (Egypt)\",\"Papillon Grand Canyon Helicopters\"]},\"selected\":{\"id\":\"1136\",\"type\":\"Selection\"},\"selection_policy\":{\"id\":\"1135\",\"type\":\"UnionRenderers\"}},\"id\":\"1117\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"callback\":null,\"factors\":[\"Compagnie Africaine d\\\\\\\\'Aviation\",\"LAN Argentina\",\"Albanian Airlines\",\"Arkefly\",\"Emirates\",\"AirAsia X\",\"XL Airways France\",\"SmartLynx Airlines\",\"Air Tahiti Nui\",\"Corsairfly\",\"Air Mauritius\",\"Air Transat\",\"Singapore Airlines\",\"Air Cara\\u00efbes\",\"Air Italy\",\"Hawaiian Airlines\",\"El Al Israel Airlines\",\"Proflight Commuter Services\",\"Cathay Pacific\",\"Virgin Atlantic Airways\",\"Thai Airways International\",\"Etihad Airways\",\"Qatar Airways\",\"Korean Air\",\"Transaero Airlines\",\"Finnair\",\"Scoot\",\"Condor Flugdienst\",\"EVA Air\",\"British Airways\",\"Mahan Air\",\"Thomas Cook Airlines\",\"Biman Bangladesh Airlines\",\"Overland Airways\",\"Qantas\",\"Santa Barbara Airlines\",\"Thomsonfly\",\"SriLankan Airlines\",\"Turkmenistan Airlines\",\"Air Seychelles\",\"Nepal Airlines\",\"Gabon Airlines\",\"TAP Portugal\",\"Icelandair\",\"Cubana de Aviaci\\u00f3n\",\"Virgin America\",\"China Airlines\",\"Lufthansa\",\"Philippine Airlines\",\"Blue Panorama Airlines\",\"BusinessAir\",\"Royal Brunei Airlines\",\"South African Airways\",\"Yangon Airways\",\"Japan Airlines\",\"Jetstar Airways\",\"Air Caledonie International\",\"Uzbekistan Airways\",\"MIAT Mongolian Airlines\",\"Swiss International Air Lines\",\"Grupo TACA\",\"Saudi Arabian Airlines\",\"Air Europa\",\"JetBlue Airways\",\"Aeroflot Russian Airlines\",\"Atlantis European Airways\",\"Asiana Airlines\",\"Kuwait Airways\",\"Salzburg arrows\",\"KLM Royal Dutch Airlines\",\"All Nippon Airways\",\"Virgin Australia\",\"Transavia France\",\"Air Canada\",\"bmibaby\",\"Air New Zealand\",\"Egyptair\",\"Belair Airlines\",\"Oman Air\",\"Delta Air Lines\",\"United Airlines\",\"Ural Airlines\",\"TUIfly\",\"S7 Airlines\",\"Air Bourbon\",\"Air France\",\"Malaysia Airlines\",\"Iberia Airlines\",\"American Airlines\",\"L\",\"Pakistan International Airlines\",\"Varig Log\",\"Kenya Airways\",\"Moskovia Airlines\",\"Tajik Air\",\"Royal Jordanian\",\"TAAG Angola Airlines\",\"TAM Brazilian Airlines\",\"Comores Airlines\",\"Brussels Airlines\",\"Turkish Airlines\",\"Germania\",\"Gulf Air Bahrain\",\"Air India Limited\",\"Air Astana\",\"Jet2.com\",\"Azerbaijan Airlines\",\"Air Austral\",\"Alitalia\",\"Jin Air\",\"US Airways\",\"LAN Airlines\",\"Air India Express\",\"Air Arabia\",\"Jetstar Asia Airways\",\"NordStar Airlines\",\"Helvetic Airways\",\"Caribbean Airlines\",\"Tiger Airways\",\"Fly Dubai\",\"Cyprus Turkish Airlines\",\"Norwegian Air Shuttle\",\"Royal Air Maroc\",\"Air Florida\",\"Ethiopian Airlines\",\"Vietnam Airlines\",\"Garuda Indonesia\",\"Copa Airlines\",\"WestJet\",\"Sun Country Airlines\",\"Aerolane\",\"Hong Kong Express Airways\",\"Air Armenia\",\"Shaheen Air International\",\"SilkAir\",\"Air Berlin\",\"Georgian Airways\",\"Middle East Airlines\",\"Air China\",\"Avianca - Aerovias Nacionales de Colombia\",\"Surinam Airways\",\"Air Pacific\",\"TACV\",\"SunExpress\",\"SATA International\",\"Aerolineas Argentinas\",\"Maxair\",\"Harmony Airways\",\"Rwandair Express\",\"Alrosa Mirny Air Enterprise\",\"Cyprus Airways\",\"Ukraine International Airlines\",\"Air Arabia Maroc\",\"Nas Air\",\"Transavia Holland\",\"Aircompany Yakutia\",\"AeroM\\u00e9xico\",\"Alaska Airlines\",\"City Airways\",\"Air Nippon\",\"Air Malta\",\"Aer Lingus\",\"Niki\",\"Tunisair\",\"Air Koryo\",\"Israir\",\"Volaris\",\"Jeju Air\",\"Apache Air\",\"Zest Air\",\"Spirit Airlines\",\"Air Busan\",\"Yemenia\",\"Sat Airlines\",\"Interlink Airlines\",\"Jet Airways\",\"Czech Airlines\",\"Orenburg Airlines\",\"Scandinavian Airlines System\",\"Austrian Airlines\",\"Gazpromavia\",\"Mandala Airlines\",\"Tiger Airways Australia\",\"Air Baltic\",\"Belavia Belarusian Airlines\",\"Hainan Airlines\",\"Allegiant Air\",\"Air Moldova\",\"Atlant-Soyuz Airlines\",\"Primaris Airlines\",\"Air Arabia Egypt\",\"Nouvel Air Tunisie\",\"Frontier Airlines\",\"Dragonair\",\"Ryanair\",\"Wizz Air Ukraine\",\"Air Macau\",\"Rossiya-Russian Airlines\",\"Interair South Africa\",\"Arrow Air\",\"Maastricht Airlines\",\"China Southern Airlines\",\"Malindo Air\",\"China SSS\",\"Nauru Air Corporation\",\"Air North Charter - Canada\",\"China Eastern Airlines\",\"Eastar Jet\",\"Sudan Airways\",\"Air Namibia\",\"AirTran Airways\",\"easyJet\",\"Southwest Airlines\",\"United Airways\",\"LOT Polish Airlines\",\"Ariana Afghan Airlines\",\"Wizz Air\",\"Luxair\",\"Ciel Canadien\",\"Orient Thai Airlines\",\"Servicios de Transportes A\",\"Meridiana\",\"Pegasus Airlines\",\"Zoom Airlines\",\"Carpatair\",\"AirAsia\",\"Bulgaria Air\",\"Astrakhan Airlines\",\"Bangkok Airways\",\"Valuair\",\"Sichuan Airlines\",\"Iran Air\",\"Indonesia AirAsia\",\"Hong Kong Airlines\",\"Asia Wings\",\"Aegean Airlines\",\"Thai AirAsia\",\"Zip\",\"Afriqiyah Airways\",\"Arkia Israel Airlines\",\"TAM Mercosur\",\"Japan Asia Airways\",\"Aigle Azur\",\"Air Madagascar\",\"Formosa Airlines\",\"Jazeera Airways\",\"Saratov Aviation Division\",\"Daallo Airlines\",\"Nile Air\",\"Juneyao Airlines\",\"Air One\",\"Air Algerie\",\"Express One International\",\"Shenzhen Airlines\",\"City Connexion Airlines\",\"Flightlink Tanzania\",\"Japan Air System\",\"Canadian National Airways\",\"Omni Air International\",\"Tarom\",\"Travel Service\",\"Air Niugini\",\"Tway Airlines\",\"Kam Air\",\"Virgin Express\",\"Shanghai Airlines\",\"Mango\",\"West Air China\",\"IzAvia\",\"Isles of Scilly Skybus\",\"Xiamen Airlines\",\"Germanwings\",\"Montenegro Airlines\",\"TransHolding System\",\"Nasair\",\"Oceanair\",\"Interjet (ABC Aerolineas)\",\"Atlasjet\",\"Cebu Pacific\",\"Air Lituanica\",\"Cargo Plus Aviation\",\"Japan Transocean Air\",\"KSY\",\"Senegal Airlines\",\"TransAsia Airways\",\"Druk Air\",\"Mauritania Airlines International\",\"Starline.kz\",\"Aerocondor\",\"Pacific East Asia Cargo Airlines\",\"AlMasria Universal Airlines\",\"China United\",\"Estonian Air\",\"World Scale Airlines\",\"South East Asian Airlines\",\"Camair-co\",\"Homer Air\",\"Libyan Arab Airlines\",\"Polet Airlines (Priv)\",\"Cambodia Angkor Air (K6)\",\"Onur Air\",\"Cargoitalia\",\"Rainbow Air Polynesia\",\"Uni Air\",\"Air Philippines\",\"Shandong Airlines\",\"Caucasus Airlines\",\"Air Serbia\",\"Empresa Ecuatoriana De Aviacion\",\"Peach Aviation\",\"Potomac Air\",\"VOLOTEA Airways\",\"Dennis Sky\",\"BQB Lineas Aereas\",\"Comair\",\"Safi Airlines\",\"Scat Air\",\"Go Air\",\"Eurolot\",\"East African\",\"BRA-Transportes Aereos\",\"IndiGo Airlines\",\"Birmingham European\",\"Atlantic Airways\",\"ZABAIKAL AIRLINES\",\"Air Foyle\",\"Hapagfly\",\"Pinnacle Airlines\",\"ALAK\",\"Far Eastern Air Transport\",\"Myway Airlines\",\"Genesis\",\"Air Mozambique\",\"Air Tindi\",\"Conviasa\",\"Aero-Service\",\"Citilink Indonesia\",\"Aeroflot-Nord\",\"Skymark Airlines\",\"Adria Airways\",\"Hokkaido International Airlines\",\"Severstal Air Company\",\"Eagle Atlantic Airlines\",\"Pal airlines\",\"Airnorth\",\"Insel Air (7I/INC) (Priv)\",\"Cayman Airways\",\"Mandarin Airlines\",\"Sriwijaya Air\",\"Lion Mentari Airlines\",\"Air Botswana\",\"MexicanaLink\",\"Air Burkina\",\"Air Sicilia\",\"Cameroon Airlines\",\"Croatia Airlines\",\"Air Saint Pierre\",\"Excel Airways\",\"Sky Airline\",\"TAME\",\"Air Bangladesh\",\"Star Flyer\",\"Iran Aseman Airlines\",\"Royal Air Cambodge\",\"Airlines Of Tasmania\",\"Azul\",\"SkyWork Airlines \",\"Piedmont Airlines (1948-1989)\",\"Air Bosna\",\"Baikotovitchestrian Airlines \",\"Spicejet\",\"Porter Airlines\",\"Jetstar Pacific\",\"Aerolineas Galapagos (Aerogal)\",\"Northern Dene Airways\",\"Air Sahara\",\"Royal Falcon\",\"Motor Sich\",\"Air Zimbabwe\",\"Lao Airlines\",\"UTair-Express\",\"Peruvian Airlines\",\"LSM Airlines\",\"Binter Canarias\",\"Regional Air Iceland\",\"Canadian North\",\"First Air\",\"Airlinair\",\"Corse-Mediterranee\",\"Abu Dhabi Amiri Flight\",\"Peninsula Airways\",\"Ibex Airlines\",\"Intersky\",\"Volotea Costa Rica\",\"Huaxia\",\"Olympic Airlines\",\"Hawkair\",\"Bahamasair\",\"Malm\\u00f6 Aviation\",\"Maldivian\",\"Aeromar\",\"Air Europe\",\"Flybe\",\"Nok Air\",\"Precision Air\",\"Metro Batavia\",\"Air Dolomiti\",\"Chicago Express\",\"Flightline\",\"Changan Airlines\",\"CityJet\",\"Kish Air\",\"Marusya Airways\",\"Estafeta Carga Aerea\",\"Flybaboo\",\"Marysya Airlines\",\"Hankook Airline\",\"Fuji Dream Airlines\",\"Omskavia Airline\",\"Air Iceland\",\"Air Antilles Express\",\"TRIP Linhas A\",\"Aero Lanka\",\"Northwestern Air\",\"Star Peru (2I)\",\"Virgin Pacific\",\"Berjaya Air\",\"Hex'Air\",\"Twin Jet\",\"Air Bagan\",\"Skynet Airlines\",\"Aereonautica militare\",\"Aserca Airlines\",\"Abaet\",\"Air Sinai\",\"Eastern Airways\",\"Amaszonas\",\"Air Rarotonga\",\"Askari Aviation\",\"Nationwide Airlines\",\"Boutique Air (Priv)\",\"Eurowings\",\"Solomon Airlines\",\"Eagle Air\",\"Regional Express\",\"All America\",\"Firefly\",\"FlyNordic\",\"Tuninter\",\"Fly540\",\"Southern Winds Airlines\",\"Airlines PNG\",\"Illinois Airways\",\"Golden Air\",\"Aero Condor Peru\",\"Asian Wings Airways\",\"Silver Airways (3M)\",\"NextJet\",\"Air Tahiti\",\"SATENA\",\"Fly One\",\"AeroWorld \",\"BVI Airways\",\"Air Vanuatu\",\"Starbow Airlines\",\"Great Lakes Airlines\",\"Air Mandalay\",\"Alaska Central Express\",\"Mongolian International Air Lines \",\"ABSA - Aerolinhas Brasileiras\",\"T.J. Air\",\"Air Atlanta Icelandic\",\"Leeward Islands Air Transport\",\"Seaborne Airlines\",\"Pacific Coastal Airline\",\"TUR Avrupa Hava Yollar\\u00c4\\u00b1\",\"Big Sky Airlines\",\"Bearskin Lake Air Service\",\"Tropic Air\",\"Air Choice One\",\"Patriot Airways\",\"Fly Air\",\"Wider\\u00f8e\",\"Hello\",\"Aurigny Air Services\",\"DAT Danish Air Transport\",\"Sharp Airlines\",\"Arik Niger\",\"Yeti Airways\",\"Viking Hellas\",\"SeaPort Airlines\",\"SATA Air Acores\",\"Skyservice Airlines\",\"Salmon Air\",\"NHT Lineas Aereas\",\"Cape Air\",\"Fly 6ix\",\"Windward Islands Airways\",\"China United Airlines\",\"Star1 Airlines\",\"Shuttle America\",\"Pacific Wings\",\"Aeroline GmbH\",\"Iberworld\",\"FlyLal\",\"Amerijet International\",\"Air Greenland\",\"LACSA\",\"VRG Linhas Aereas\",\"Zambia Skyways\",\"VivaColombia\",\"Aeroper\",\"SkyBahamas Airlines\",\"Tiara Air\",\"Chitaavia\",\"Astral Aviation\",\"Island Air (WP)\",\"Euro Exec Express\",\"CAL Cargo Air Lines\",\"Catovair\",\"Benin Golf Air\",\"SENIC AIRLINES\",\"Era Alaska\",\"Aero Flight\",\"Bering Air\",\"Maya Island Air\",\"Georgian National Airlines\",\"Helijet\",\"International AirLink\",\"Sibaviatrans\",\"WebJet Linhas A\",\"Reem Air\",\"PB Air\",\"PAN Air\",\"Alaska Seaplane Service\",\"40-Mile Air\",\"Airbus France\",\"Astair\",\"Linhas A\",\"Kenmore Air\",\"SOCHI AIR CHATER\",\"Atlantic Air Cargo\",\"Air Salone\",\"Fly Colombia ( Interliging Flights )\",\"Avient Aviation\",\"Midwest Airlines (Egypt)\",\"Papillon Grand Canyon Helicopters\"]},\"id\":\"1099\",\"type\":\"FactorRange\"},{\"attributes\":{},\"id\":\"1112\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"formatter\":{\"id\":\"1133\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1112\",\"type\":\"BasicTicker\"}},\"id\":\"1111\",\"type\":\"LinearAxis\"},{\"attributes\":{\"grid_line_color\":null,\"ticker\":{\"id\":\"1108\",\"type\":\"CategoricalTicker\"}},\"id\":\"1110\",\"type\":\"Grid\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"top\":{\"field\":\"top\"},\"width\":{\"value\":1.9},\"x\":{\"field\":\"x\"}},\"id\":\"1118\",\"type\":\"VBar\"},{\"attributes\":{\"active_drag\":\"auto\",\"active_inspect\":\"auto\",\"active_multi\":null,\"active_scroll\":\"auto\",\"active_tap\":\"auto\"},\"id\":\"1116\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"1117\",\"type\":\"ColumnDataSource\"}},\"id\":\"1121\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1108\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"callback\":null,\"start\":0},\"id\":\"1101\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1133\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1131\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"dimension\":1,\"ticker\":{\"id\":\"1112\",\"type\":\"BasicTicker\"}},\"id\":\"1115\",\"type\":\"Grid\"},{\"attributes\":{\"formatter\":{\"id\":\"1131\",\"type\":\"CategoricalTickFormatter\"},\"major_label_orientation\":0.7853981633974483,\"ticker\":{\"id\":\"1108\",\"type\":\"CategoricalTicker\"}},\"id\":\"1107\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1117\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"1118\",\"type\":\"VBar\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1119\",\"type\":\"VBar\"},\"selection_glyph\":null,\"view\":{\"id\":\"1121\",\"type\":\"CDSView\"}},\"id\":\"1120\",\"type\":\"GlyphRenderer\"}],\"root_ids\":[\"1096\"]},\"title\":\"Bokeh Application\",\"version\":\"1.4.0\"}};\n",
              "  var render_items = [{\"docid\":\"a114f2f4-701a-4944-b4d6-0eeed08865e5\",\"roots\":{\"1096\":\"852368d9-6c34-4a55-8a91-dfc98d9e28b0\"}}];\n",
              "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
              "\n",
              "  }\n",
              "  if (root.Bokeh !== undefined) {\n",
              "    embed_document(root);\n",
              "  } else {\n",
              "    var attempts = 0;\n",
              "    var timer = setInterval(function(root) {\n",
              "      if (root.Bokeh !== undefined) {\n",
              "        clearInterval(timer);\n",
              "        embed_document(root);\n",
              "      } else {\n",
              "        attempts++;\n",
              "        if (attempts > 100) {\n",
              "          clearInterval(timer);\n",
              "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
              "        }\n",
              "      }\n",
              "    }, 10, root)\n",
              "  }\n",
              "})(window);"
            ],
            "application/vnd.bokehjs_exec.v0+json": ""
          },
          "metadata": {
            "tags": [],
            "application/vnd.bokehjs_exec.v0+json": {
              "id": "1096"
            }
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dIoU9aeKW0J8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 485
        },
        "outputId": "b1643f8c-85a3-4c0f-e6dd-742783c8406a"
      },
      "source": [
        "#showing only the few top routes to eliminate the clutter\n",
        "\n",
        "output_notebook()\n",
        "\n",
        "airline_route_lengths10 = airline_route_lengths[:20]\n",
        "\n",
        "airline_name10 = airline_route_lengths10.name\n",
        "avg_route_length10 = airline_route_lengths10.length\n",
        "\n",
        "p10 = figure(x_range=airline_name10, plot_height=450, plot_width=800, title=\"Airline Route Lengths to 10\",\n",
        "            toolbar_location=\"below\")\n",
        "\n",
        "p10.vbar(x=airline_name10, top=avg_route_length, width=1.9)\n",
        "\n",
        "p10.xgrid.grid_line_color = None\n",
        "p10.y_range.start = 0\n",
        "#p.xaxis.major_label_orientation = \"vertical\"\n",
        "p10.xaxis.major_label_orientation = math.pi/4\n",
        "\n",
        "\n",
        "show(p10)"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "BokehUserWarning: ColumnDataSource's columns must be of the same length. Current lengths: ('top', 547), ('x', 20)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "\n",
              "(function(root) {\n",
              "  function now() {\n",
              "    return new Date();\n",
              "  }\n",
              "\n",
              "  var force = true;\n",
              "\n",
              "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
              "    root._bokeh_onload_callbacks = [];\n",
              "    root._bokeh_is_loading = undefined;\n",
              "  }\n",
              "\n",
              "  var JS_MIME_TYPE = 'application/javascript';\n",
              "  var HTML_MIME_TYPE = 'text/html';\n",
              "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
              "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
              "\n",
              "  /**\n",
              "   * Render data to the DOM node\n",
              "   */\n",
              "  function render(props, node) {\n",
              "    var script = document.createElement(\"script\");\n",
              "    node.appendChild(script);\n",
              "  }\n",
              "\n",
              "  /**\n",
              "   * Handle when an output is cleared or removed\n",
              "   */\n",
              "  function handleClearOutput(event, handle) {\n",
              "    var cell = handle.cell;\n",
              "\n",
              "    var id = cell.output_area._bokeh_element_id;\n",
              "    var server_id = cell.output_area._bokeh_server_id;\n",
              "    // Clean up Bokeh references\n",
              "    if (id != null && id in Bokeh.index) {\n",
              "      Bokeh.index[id].model.document.clear();\n",
              "      delete Bokeh.index[id];\n",
              "    }\n",
              "\n",
              "    if (server_id !== undefined) {\n",
              "      // Clean up Bokeh references\n",
              "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
              "      cell.notebook.kernel.execute(cmd, {\n",
              "        iopub: {\n",
              "          output: function(msg) {\n",
              "            var id = msg.content.text.trim();\n",
              "            if (id in Bokeh.index) {\n",
              "              Bokeh.index[id].model.document.clear();\n",
              "              delete Bokeh.index[id];\n",
              "            }\n",
              "          }\n",
              "        }\n",
              "      });\n",
              "      // Destroy server and session\n",
              "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
              "      cell.notebook.kernel.execute(cmd);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  /**\n",
              "   * Handle when a new output is added\n",
              "   */\n",
              "  function handleAddOutput(event, handle) {\n",
              "    var output_area = handle.output_area;\n",
              "    var output = handle.output;\n",
              "\n",
              "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
              "    if ((output.output_type != \"display_data\") || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n",
              "      return\n",
              "    }\n",
              "\n",
              "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
              "\n",
              "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
              "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
              "      // store reference to embed id on output_area\n",
              "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
              "    }\n",
              "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
              "      var bk_div = document.createElement(\"div\");\n",
              "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
              "      var script_attrs = bk_div.children[0].attributes;\n",
              "      for (var i = 0; i < script_attrs.length; i++) {\n",
              "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
              "      }\n",
              "      // store reference to server id on output_area\n",
              "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
              "    }\n",
              "  }\n",
              "\n",
              "  function register_renderer(events, OutputArea) {\n",
              "\n",
              "    function append_mime(data, metadata, element) {\n",
              "      // create a DOM node to render to\n",
              "      var toinsert = this.create_output_subarea(\n",
              "        metadata,\n",
              "        CLASS_NAME,\n",
              "        EXEC_MIME_TYPE\n",
              "      );\n",
              "      this.keyboard_manager.register_events(toinsert);\n",
              "      // Render to node\n",
              "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
              "      render(props, toinsert[toinsert.length - 1]);\n",
              "      element.append(toinsert);\n",
              "      return toinsert\n",
              "    }\n",
              "\n",
              "    /* Handle when an output is cleared or removed */\n",
              "    events.on('clear_output.CodeCell', handleClearOutput);\n",
              "    events.on('delete.Cell', handleClearOutput);\n",
              "\n",
              "    /* Handle when a new output is added */\n",
              "    events.on('output_added.OutputArea', handleAddOutput);\n",
              "\n",
              "    /**\n",
              "     * Register the mime type and append_mime function with output_area\n",
              "     */\n",
              "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
              "      /* Is output safe? */\n",
              "      safe: true,\n",
              "      /* Index of renderer in `output_area.display_order` */\n",
              "      index: 0\n",
              "    });\n",
              "  }\n",
              "\n",
              "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
              "  if (root.Jupyter !== undefined) {\n",
              "    var events = require('base/js/events');\n",
              "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
              "\n",
              "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
              "      register_renderer(events, OutputArea);\n",
              "    }\n",
              "  }\n",
              "\n",
              "  \n",
              "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
              "    root._bokeh_timeout = Date.now() + 5000;\n",
              "    root._bokeh_failed_load = false;\n",
              "  }\n",
              "\n",
              "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
              "     \"<div style='background-color: #fdd'>\\n\"+\n",
              "     \"<p>\\n\"+\n",
              "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
              "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
              "     \"</p>\\n\"+\n",
              "     \"<ul>\\n\"+\n",
              "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
              "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
              "     \"</ul>\\n\"+\n",
              "     \"<code>\\n\"+\n",
              "     \"from bokeh.resources import INLINE\\n\"+\n",
              "     \"output_notebook(resources=INLINE)\\n\"+\n",
              "     \"</code>\\n\"+\n",
              "     \"</div>\"}};\n",
              "\n",
              "  function display_loaded() {\n",
              "    var el = document.getElementById(null);\n",
              "    if (el != null) {\n",
              "      el.textContent = \"BokehJS is loading...\";\n",
              "    }\n",
              "    if (root.Bokeh !== undefined) {\n",
              "      if (el != null) {\n",
              "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
              "      }\n",
              "    } else if (Date.now() < root._bokeh_timeout) {\n",
              "      setTimeout(display_loaded, 100)\n",
              "    }\n",
              "  }\n",
              "\n",
              "\n",
              "  function run_callbacks() {\n",
              "    try {\n",
              "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
              "        if (callback != null)\n",
              "          callback();\n",
              "      });\n",
              "    } finally {\n",
              "      delete root._bokeh_onload_callbacks\n",
              "    }\n",
              "    console.debug(\"Bokeh: all callbacks have finished\");\n",
              "  }\n",
              "\n",
              "  function load_libs(css_urls, js_urls, callback) {\n",
              "    if (css_urls == null) css_urls = [];\n",
              "    if (js_urls == null) js_urls = [];\n",
              "\n",
              "    root._bokeh_onload_callbacks.push(callback);\n",
              "    if (root._bokeh_is_loading > 0) {\n",
              "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
              "      return null;\n",
              "    }\n",
              "    if (js_urls == null || js_urls.length === 0) {\n",
              "      run_callbacks();\n",
              "      return null;\n",
              "    }\n",
              "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
              "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
              "\n",
              "    function on_load() {\n",
              "      root._bokeh_is_loading--;\n",
              "      if (root._bokeh_is_loading === 0) {\n",
              "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
              "        run_callbacks()\n",
              "      }\n",
              "    }\n",
              "\n",
              "    function on_error() {\n",
              "      console.error(\"failed to load \" + url);\n",
              "    }\n",
              "\n",
              "    for (var i = 0; i < css_urls.length; i++) {\n",
              "      var url = css_urls[i];\n",
              "      const element = document.createElement(\"link\");\n",
              "      element.onload = on_load;\n",
              "      element.onerror = on_error;\n",
              "      element.rel = \"stylesheet\";\n",
              "      element.type = \"text/css\";\n",
              "      element.href = url;\n",
              "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
              "      document.body.appendChild(element);\n",
              "    }\n",
              "\n",
              "    for (var i = 0; i < js_urls.length; i++) {\n",
              "      var url = js_urls[i];\n",
              "      var element = document.createElement('script');\n",
              "      element.onload = on_load;\n",
              "      element.onerror = on_error;\n",
              "      element.async = false;\n",
              "      element.src = url;\n",
              "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
              "      document.head.appendChild(element);\n",
              "    }\n",
              "  };\n",
              "\n",
              "  function inject_raw_css(css) {\n",
              "    const element = document.createElement(\"style\");\n",
              "    element.appendChild(document.createTextNode(css));\n",
              "    document.body.appendChild(element);\n",
              "  }\n",
              "\n",
              "  \n",
              "  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.4.0.min.js\"];\n",
              "  var css_urls = [];\n",
              "  \n",
              "\n",
              "  var inline_js = [\n",
              "    function(Bokeh) {\n",
              "      Bokeh.set_log_level(\"info\");\n",
              "    },\n",
              "    function(Bokeh) {\n",
              "    \n",
              "    \n",
              "    }\n",
              "  ];\n",
              "\n",
              "  function run_inline_js() {\n",
              "    \n",
              "    if (root.Bokeh !== undefined || force === true) {\n",
              "      \n",
              "    for (var i = 0; i < inline_js.length; i++) {\n",
              "      inline_js[i].call(root, root.Bokeh);\n",
              "    }\n",
              "    } else if (Date.now() < root._bokeh_timeout) {\n",
              "      setTimeout(run_inline_js, 100);\n",
              "    } else if (!root._bokeh_failed_load) {\n",
              "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
              "      root._bokeh_failed_load = true;\n",
              "    } else if (force !== true) {\n",
              "      var cell = $(document.getElementById(null)).parents('.cell').data().cell;\n",
              "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
              "    }\n",
              "\n",
              "  }\n",
              "\n",
              "  if (root._bokeh_is_loading === 0) {\n",
              "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
              "    run_inline_js();\n",
              "  } else {\n",
              "    load_libs(css_urls, js_urls, function() {\n",
              "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
              "      run_inline_js();\n",
              "    });\n",
              "  }\n",
              "}(window));"
            ],
            "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(null);\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (var i = 0; i < css_urls.length; i++) {\n      var url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (var i = 0; i < js_urls.length; i++) {\n      var url = js_urls[i];\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.pydata.org/bokeh/release/bokeh-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.4.0.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.4.0.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "  <div class=\"bk-root\" id=\"2253f744-9cfb-40a3-82b1-0135b20bd203\" data-root-id=\"1179\"></div>\n"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/javascript": [
              "(function(root) {\n",
              "  function embed_document(root) {\n",
              "    \n",
              "  var docs_json = {\"92f4a21e-5017-4e29-94f5-500c1c83cf68\":{\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1190\",\"type\":\"CategoricalAxis\"}],\"center\":[{\"id\":\"1193\",\"type\":\"Grid\"},{\"id\":\"1198\",\"type\":\"Grid\"}],\"left\":[{\"id\":\"1194\",\"type\":\"LinearAxis\"}],\"plot_height\":450,\"plot_width\":800,\"renderers\":[{\"id\":\"1215\",\"type\":\"GlyphRenderer\"}],\"title\":{\"id\":\"1180\",\"type\":\"Title\"},\"toolbar\":{\"id\":\"1205\",\"type\":\"Toolbar\"},\"toolbar_location\":\"below\",\"x_range\":{\"id\":\"1182\",\"type\":\"FactorRange\"},\"x_scale\":{\"id\":\"1186\",\"type\":\"CategoricalScale\"},\"y_range\":{\"id\":\"1184\",\"type\":\"DataRange1d\"},\"y_scale\":{\"id\":\"1188\",\"type\":\"LinearScale\"}},\"id\":\"1179\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"callback\":null,\"start\":0},\"id\":\"1184\",\"type\":\"DataRange1d\"},{\"attributes\":{\"active_drag\":\"auto\",\"active_inspect\":\"auto\",\"active_multi\":null,\"active_scroll\":\"auto\",\"active_tap\":\"auto\",\"tools\":[{\"id\":\"1199\",\"type\":\"PanTool\"},{\"id\":\"1200\",\"type\":\"WheelZoomTool\"},{\"id\":\"1201\",\"type\":\"BoxZoomTool\"},{\"id\":\"1202\",\"type\":\"SaveTool\"},{\"id\":\"1203\",\"type\":\"ResetTool\"},{\"id\":\"1204\",\"type\":\"HelpTool\"}]},\"id\":\"1205\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1186\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"data_source\":{\"id\":\"1212\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"1213\",\"type\":\"VBar\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1214\",\"type\":\"VBar\"},\"selection_glyph\":null,\"view\":{\"id\":\"1216\",\"type\":\"CDSView\"}},\"id\":\"1215\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"1212\",\"type\":\"ColumnDataSource\"}},\"id\":\"1216\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1188\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1238\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"formatter\":{\"id\":\"1233\",\"type\":\"CategoricalTickFormatter\"},\"major_label_orientation\":0.7853981633974483,\"ticker\":{\"id\":\"1191\",\"type\":\"CategoricalTicker\"}},\"id\":\"1190\",\"type\":\"CategoricalAxis\"},{\"attributes\":{},\"id\":\"1191\",\"type\":\"CategoricalTicker\"},{\"attributes\":{},\"id\":\"1233\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"grid_line_color\":null,\"ticker\":{\"id\":\"1191\",\"type\":\"CategoricalTicker\"}},\"id\":\"1193\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":{\"value\":0.5},\"fill_color\":{\"value\":\"lightgrey\"},\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":{\"value\":1.0},\"line_color\":{\"value\":\"black\"},\"line_dash\":[4,4],\"line_width\":{\"value\":2},\"render_mode\":\"css\",\"right_units\":\"screen\",\"top_units\":\"screen\"},\"id\":\"1237\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"formatter\":{\"id\":\"1235\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1195\",\"type\":\"BasicTicker\"}},\"id\":\"1194\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1195\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1235\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"dimension\":1,\"ticker\":{\"id\":\"1195\",\"type\":\"BasicTicker\"}},\"id\":\"1198\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1239\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f77b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f77b4\"},\"top\":{\"field\":\"top\"},\"width\":{\"value\":1.9},\"x\":{\"field\":\"x\"}},\"id\":\"1214\",\"type\":\"VBar\"},{\"attributes\":{\"fill_color\":{\"value\":\"#1f77b4\"},\"line_color\":{\"value\":\"#1f77b4\"},\"top\":{\"field\":\"top\"},\"width\":{\"value\":1.9},\"x\":{\"field\":\"x\"}},\"id\":\"1213\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"1199\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1200\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1237\",\"type\":\"BoxAnnotation\"}},\"id\":\"1201\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1202\",\"type\":\"SaveTool\"},{\"attributes\":{\"callback\":null,\"data\":{\"top\":{\"__ndarray__\":\"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\",\"dtype\":\"float64\",\"shape\":[547]},\"x\":[\"Compagnie Africaine d\\\\\\\\'Aviation\",\"LAN Argentina\",\"Albanian Airlines\",\"Arkefly\",\"Emirates\",\"AirAsia X\",\"XL Airways France\",\"SmartLynx Airlines\",\"Air Tahiti Nui\",\"Corsairfly\",\"Air Mauritius\",\"Air Transat\",\"Singapore Airlines\",\"Air Cara\\u00efbes\",\"Air Italy\",\"Hawaiian Airlines\",\"El Al Israel Airlines\",\"Proflight Commuter Services\",\"Cathay Pacific\",\"Virgin Atlantic Airways\"]},\"selected\":{\"id\":\"1239\",\"type\":\"Selection\"},\"selection_policy\":{\"id\":\"1238\",\"type\":\"UnionRenderers\"}},\"id\":\"1212\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1203\",\"type\":\"ResetTool\"},{\"attributes\":{\"text\":\"Airline Route Lengths to 10\"},\"id\":\"1180\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"1204\",\"type\":\"HelpTool\"},{\"attributes\":{\"callback\":null,\"factors\":[\"Compagnie Africaine d\\\\\\\\'Aviation\",\"LAN Argentina\",\"Albanian Airlines\",\"Arkefly\",\"Emirates\",\"AirAsia X\",\"XL Airways France\",\"SmartLynx Airlines\",\"Air Tahiti Nui\",\"Corsairfly\",\"Air Mauritius\",\"Air Transat\",\"Singapore Airlines\",\"Air Cara\\u00efbes\",\"Air Italy\",\"Hawaiian Airlines\",\"El Al Israel Airlines\",\"Proflight Commuter Services\",\"Cathay Pacific\",\"Virgin Atlantic Airways\"]},\"id\":\"1182\",\"type\":\"FactorRange\"}],\"root_ids\":[\"1179\"]},\"title\":\"Bokeh Application\",\"version\":\"1.4.0\"}};\n",
              "  var render_items = [{\"docid\":\"92f4a21e-5017-4e29-94f5-500c1c83cf68\",\"roots\":{\"1179\":\"2253f744-9cfb-40a3-82b1-0135b20bd203\"}}];\n",
              "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
              "\n",
              "  }\n",
              "  if (root.Bokeh !== undefined) {\n",
              "    embed_document(root);\n",
              "  } else {\n",
              "    var attempts = 0;\n",
              "    var timer = setInterval(function(root) {\n",
              "      if (root.Bokeh !== undefined) {\n",
              "        clearInterval(timer);\n",
              "        embed_document(root);\n",
              "      } else {\n",
              "        attempts++;\n",
              "        if (attempts > 100) {\n",
              "          clearInterval(timer);\n",
              "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
              "        }\n",
              "      }\n",
              "    }, 10, root)\n",
              "  }\n",
              "})(window);"
            ],
            "application/vnd.bokehjs_exec.v0+json": ""
          },
          "metadata": {
            "tags": [],
            "application/vnd.bokehjs_exec.v0+json": {
              "id": "1179"
            }
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5p92OMBYW5Hh",
        "colab_type": "text"
      },
      "source": [
        "4 Pygal - Horizontal Bars"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5S3tnsHzW0dS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "long_routes = len([k for k in route_lengths if k > 10000])*100 / len(route_lengths)\n",
        "medium_routes = len([k for k in route_lengths if k < 10000 and k > 2000])*100 / len(route_lengths)\n",
        "short_routes = len([k for k in route_lengths if k < 2000])*100 / len(route_lengths)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UHe59ywbW0gZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "6a8d121f-43fd-4c7a-e595-dcad286c8b00"
      },
      "source": [
        "print(short_routes, medium_routes, long_routes)"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "72.56340795427482 26.49440342938795 0.9421886163372232\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XabF_a9WW0j4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        },
        "outputId": "7b940bcc-db65-4e0f-ae47-72542fe62b2e"
      },
      "source": [
        "!pip install pygal"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting pygal\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/5f/b7/201c9254ac0d2b8ffa3bb2d528d23a4130876d9ba90bc28e99633f323f17/pygal-2.4.0-py2.py3-none-any.whl (127kB)\n",
            "\r\u001b[K     |██▋                             | 10kB 20.8MB/s eta 0:00:01\r\u001b[K     |█████▏                          | 20kB 1.8MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 30kB 2.6MB/s eta 0:00:01\r\u001b[K     |██████████▎                     | 40kB 1.7MB/s eta 0:00:01\r\u001b[K     |████████████▉                   | 51kB 2.1MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 61kB 2.5MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 71kB 2.9MB/s eta 0:00:01\r\u001b[K     |████████████████████▌           | 81kB 3.3MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 92kB 3.7MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▊      | 102kB 2.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▎   | 112kB 2.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 122kB 2.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 133kB 2.8MB/s \n",
            "\u001b[?25hInstalling collected packages: pygal\n",
            "Successfully installed pygal-2.4.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x3tiKkgHW0ov",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 714
        },
        "outputId": "02c8b5b3-6b73-49cf-a8ea-5b541073d1b1"
      },
      "source": [
        "import pygal\n",
        "from IPython.display import SVG\n",
        "\n",
        "chart = pygal.HorizontalBar()\n",
        "chart.title = 'Long, medium, and short routes'\n",
        "chart.add('Long', long_routes)\n",
        "chart.add('Medium', medium_routes)\n",
        "chart.add('Short', short_routes)\n",
        "#chart.render_to_file('/blog/content/images/routes.svg')\n",
        "#SVG(filename='/blog/content/images/routes.svg')\n",
        "chart.render_to_file('routes.svg')\n",
        "SVG(filename='routes.svg')"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.SVG object>"
            ],
            "image/svg+xml": "<svg class=\"pygal-chart\" id=\"chart-28a7e745-80b6-4b61-a392-59eb74dedbef\" viewBox=\"0 0 800 600\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><!--Generated with pygal 2.4.0 (lxml) ©Kozea 2012-2016 on 2020-02-05--><!--http://pygal.org--><!--http://github.com/Kozea/pygal--><defs><style type=\"text/css\">#chart-28a7e745-80b6-4b61-a392-59eb74dedbef{-webkit-user-select:none;-webkit-font-smoothing:antialiased;font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .title{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:16px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .legends .legend text{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:14px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis text{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:10px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis text.major{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:10px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .text-overlay text.value{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:16px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .text-overlay text.label{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:10px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:14px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef text.no_data{font-family:Consolas,&quot;Liberation Mono&quot;,Menlo,Courier,monospace;font-size:64px}\n#chart-28a7e745-80b6-4b61-a392-59eb74dedbef{background-color:rgba(249,249,249,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef path,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef rect,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef circle{-webkit-transition:150ms;-moz-transition:150ms;transition:150ms}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .graph &gt; .background{fill:rgba(249,249,249,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .plot &gt; .background{fill:rgba(255,255,255,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .graph{fill:rgba(0,0,0,.87)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef text.no_data{fill:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .title{fill:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .legends .legend text{fill:rgba(0,0,0,.87)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .legends .legend:hover text{fill:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis .line{stroke:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis .guide.line{stroke:rgba(0,0,0,.54)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis .major.line{stroke:rgba(0,0,0,.87)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis text.major{fill:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.y .guides:hover .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .line-graph .axis.x .guides:hover .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .stackedline-graph .axis.x .guides:hover .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .xy-graph .axis.x .guides:hover .guide.line{stroke:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis .guides:hover text{fill:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .reactive{fill-opacity:.7;stroke-opacity:.8}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .ci{stroke:rgba(0,0,0,.87)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .reactive.active,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .active .reactive{fill-opacity:.8;stroke-opacity:.9;stroke-width:4}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .ci .reactive.active{stroke-width:1.5}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .series text{fill:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip rect{fill:rgba(255,255,255,1);stroke:rgba(0,0,0,1);-webkit-transition:opacity 150ms;-moz-transition:opacity 150ms;transition:opacity 150ms}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip .label{fill:rgba(0,0,0,.87)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip .label{fill:rgba(0,0,0,.87)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip .legend{font-size:.8em;fill:rgba(0,0,0,.54)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip .x_label{font-size:.6em;fill:rgba(0,0,0,1)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip .xlink{font-size:.5em;text-decoration:underline}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip .value{font-size:1.5em}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .bound{font-size:.5em}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .max-value{font-size:.75em;fill:rgba(0,0,0,.54)}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .map-element{fill:rgba(255,255,255,1);stroke:rgba(0,0,0,.54) !important}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .map-element .reactive{fill-opacity:inherit;stroke-opacity:inherit}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .color-0,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .color-0 a:visited{stroke:#F44336;fill:#F44336}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .color-1,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .color-1 a:visited{stroke:#3F51B5;fill:#3F51B5}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .color-2,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .color-2 a:visited{stroke:#009688;fill:#009688}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .text-overlay .color-0 text{fill:black}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .text-overlay .color-1 text{fill:black}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .text-overlay .color-2 text{fill:black}\n#chart-28a7e745-80b6-4b61-a392-59eb74dedbef text.no_data{text-anchor:middle}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .guide.line{fill:none}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .centered{text-anchor:middle}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .title{text-anchor:middle}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .legends .legend text{fill-opacity:1}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.x text{text-anchor:middle}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.x:not(.web) text[transform]{text-anchor:start}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.x:not(.web) text[transform].backwards{text-anchor:end}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.y text{text-anchor:end}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.y text[transform].backwards{text-anchor:start}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.y2 text{text-anchor:start}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.y2 text[transform].backwards{text-anchor:end}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis .guide.line{stroke-dasharray:4,4}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis .major.guide.line{stroke-dasharray:6,6}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .horizontal .axis.y .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .horizontal .axis.y2 .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .vertical .axis.x .guide.line{opacity:0}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .horizontal .axis.always_show .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .vertical .axis.always_show .guide.line{opacity:1 !important}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.y .guides:hover .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.y2 .guides:hover .guide.line,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis.x .guides:hover .guide.line{opacity:1}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .axis .guides:hover text{opacity:1}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .nofill{fill:none}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .subtle-fill{fill-opacity:.2}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .dot{stroke-width:1px;fill-opacity:1}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .dot.active{stroke-width:5px}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .dot.negative{fill:transparent}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef text,#chart-28a7e745-80b6-4b61-a392-59eb74dedbef tspan{stroke:none !important}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .series text.active{opacity:1}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip rect{fill-opacity:.95;stroke-width:.5}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .tooltip text{fill-opacity:1}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .showable{visibility:hidden}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .showable.shown{visibility:visible}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .gauge-background{fill:rgba(229,229,229,1);stroke:none}#chart-28a7e745-80b6-4b61-a392-59eb74dedbef .bg-lines{stroke:rgba(249,249,249,1);stroke-width:2px}</style><script type=\"text/javascript\">window.pygal = window.pygal || {};window.pygal.config = window.pygal.config || {};window.pygal.config['28a7e745-80b6-4b61-a392-59eb74dedbef'] = {&quot;allow_interruptions&quot;: false, &quot;box_mode&quot;: &quot;extremes&quot;, &quot;classes&quot;: [&quot;pygal-chart&quot;], &quot;css&quot;: [&quot;file://style.css&quot;, &quot;file://graph.css&quot;], &quot;defs&quot;: [], &quot;disable_xml_declaration&quot;: false, &quot;dots_size&quot;: 2.5, &quot;dynamic_print_values&quot;: false, &quot;explicit_size&quot;: false, &quot;fill&quot;: false, &quot;force_uri_protocol&quot;: &quot;https&quot;, &quot;formatter&quot;: null, &quot;half_pie&quot;: false, &quot;height&quot;: 600, &quot;include_x_axis&quot;: false, &quot;inner_radius&quot;: 0, &quot;interpolate&quot;: null, &quot;interpolation_parameters&quot;: {}, &quot;interpolation_precision&quot;: 250, &quot;inverse_y_axis&quot;: false, &quot;js&quot;: [&quot;//kozea.github.io/pygal.js/2.0.x/pygal-tooltips.min.js&quot;], &quot;legend_at_bottom&quot;: false, &quot;legend_at_bottom_columns&quot;: null, &quot;legend_box_size&quot;: 12, &quot;logarithmic&quot;: false, &quot;margin&quot;: 20, &quot;margin_bottom&quot;: null, &quot;margin_left&quot;: null, &quot;margin_right&quot;: null, &quot;margin_top&quot;: null, &quot;max_scale&quot;: 16, &quot;min_scale&quot;: 4, &quot;missing_value_fill_truncation&quot;: &quot;x&quot;, &quot;no_data_text&quot;: &quot;No data&quot;, &quot;no_prefix&quot;: false, &quot;order_min&quot;: null, &quot;pretty_print&quot;: false, &quot;print_labels&quot;: false, &quot;print_values&quot;: false, &quot;print_values_position&quot;: &quot;center&quot;, &quot;print_zeroes&quot;: true, &quot;range&quot;: null, &quot;rounded_bars&quot;: null, &quot;secondary_range&quot;: null, &quot;show_dots&quot;: true, &quot;show_legend&quot;: true, &quot;show_minor_x_labels&quot;: true, &quot;show_minor_y_labels&quot;: true, &quot;show_only_major_dots&quot;: false, &quot;show_x_guides&quot;: true, &quot;show_x_labels&quot;: true, &quot;show_y_guides&quot;: false, &quot;show_y_labels&quot;: true, &quot;spacing&quot;: 10, &quot;stack_from_top&quot;: false, &quot;strict&quot;: false, &quot;stroke&quot;: true, &quot;stroke_style&quot;: null, &quot;style&quot;: {&quot;background&quot;: &quot;rgba(249, 249, 249, 1)&quot;, &quot;ci_colors&quot;: [], &quot;colors&quot;: [&quot;#F44336&quot;, &quot;#3F51B5&quot;, &quot;#009688&quot;, &quot;#FFC107&quot;, &quot;#FF5722&quot;, &quot;#9C27B0&quot;, &quot;#03A9F4&quot;, &quot;#8BC34A&quot;, &quot;#FF9800&quot;, &quot;#E91E63&quot;, &quot;#2196F3&quot;, &quot;#4CAF50&quot;, &quot;#FFEB3B&quot;, &quot;#673AB7&quot;, &quot;#00BCD4&quot;, &quot;#CDDC39&quot;, &quot;#9E9E9E&quot;, &quot;#607D8B&quot;], &quot;font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;foreground&quot;: &quot;rgba(0, 0, 0, .87)&quot;, &quot;foreground_strong&quot;: &quot;rgba(0, 0, 0, 1)&quot;, &quot;foreground_subtle&quot;: &quot;rgba(0, 0, 0, .54)&quot;, &quot;guide_stroke_dasharray&quot;: &quot;4,4&quot;, &quot;label_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;label_font_size&quot;: 10, &quot;legend_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;legend_font_size&quot;: 14, &quot;major_guide_stroke_dasharray&quot;: &quot;6,6&quot;, &quot;major_label_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;major_label_font_size&quot;: 10, &quot;no_data_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;no_data_font_size&quot;: 64, &quot;opacity&quot;: &quot;.7&quot;, &quot;opacity_hover&quot;: &quot;.8&quot;, &quot;plot_background&quot;: &quot;rgba(255, 255, 255, 1)&quot;, &quot;stroke_opacity&quot;: &quot;.8&quot;, &quot;stroke_opacity_hover&quot;: &quot;.9&quot;, &quot;title_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;title_font_size&quot;: 16, &quot;tooltip_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;tooltip_font_size&quot;: 14, &quot;transition&quot;: &quot;150ms&quot;, &quot;value_background&quot;: &quot;rgba(229, 229, 229, 1)&quot;, &quot;value_colors&quot;: [], &quot;value_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;value_font_size&quot;: 16, &quot;value_label_font_family&quot;: &quot;Consolas, \\&quot;Liberation Mono\\&quot;, Menlo, Courier, monospace&quot;, &quot;value_label_font_size&quot;: 10}, &quot;title&quot;: &quot;Long, medium, and short routes&quot;, &quot;tooltip_border_radius&quot;: 0, &quot;tooltip_fancy_mode&quot;: true, &quot;truncate_label&quot;: null, &quot;truncate_legend&quot;: null, &quot;width&quot;: 800, &quot;x_label_rotation&quot;: 0, &quot;x_labels&quot;: null, &quot;x_labels_major&quot;: null, &quot;x_labels_major_count&quot;: null, &quot;x_labels_major_every&quot;: null, &quot;x_title&quot;: null, &quot;xrange&quot;: null, &quot;y_label_rotation&quot;: 0, &quot;y_labels&quot;: null, &quot;y_labels_major&quot;: null, &quot;y_labels_major_count&quot;: null, &quot;y_labels_major_every&quot;: null, &quot;y_title&quot;: null, &quot;zero&quot;: 0, &quot;legends&quot;: [&quot;Long&quot;, &quot;Medium&quot;, &quot;Short&quot;]}</script><script type=\"text/javascript\" xlink:href=\"https://kozea.github.io/pygal.js/2.0.x/pygal-tooltips.min.js\"/></defs><title>Long, medium, and short routes</title><g class=\"graph horizontalbar-graph horizontal\"><rect class=\"background\" height=\"600\" width=\"800\" x=\"0\" y=\"0\"/><g class=\"plot\" transform=\"translate(92, 46)\"><rect class=\"background\" height=\"514\" width=\"687.6\" x=\"0\" y=\"0\"/><g class=\"axis x always_show\"><g class=\"guides\"><path class=\"axis major line\" d=\"M13.223077 0.000000 v514.000000\"/><text class=\"major\" x=\"13.223076923076924\" y=\"529.0\">0</text></g><g class=\"guides\"><path class=\"guide line\" d=\"M104.337023 0.000000 v514.000000\"/><text class=\"\" x=\"104.337023303664\" y=\"529.0\">10</text></g><g class=\"guides\"><path class=\"guide line\" d=\"M195.450970 0.000000 v514.000000\"/><text class=\"\" x=\"195.45096968425108\" y=\"529.0\">20</text></g><g class=\"guides\"><path class=\"guide line\" d=\"M286.564916 0.000000 v514.000000\"/><text class=\"\" x=\"286.5649160648381\" y=\"529.0\">30</text></g><g class=\"guides\"><path class=\"guide line\" d=\"M377.678862 0.000000 v514.000000\"/><text class=\"\" x=\"377.6788624454252\" y=\"529.0\">40</text></g><g class=\"guides\"><path class=\"major guide line\" d=\"M468.792809 0.000000 v514.000000\"/><text class=\"major\" x=\"468.79280882601216\" y=\"529.0\">50</text></g><g class=\"guides\"><path class=\"guide line\" d=\"M559.906755 0.000000 v514.000000\"/><text class=\"\" x=\"559.9067552065992\" y=\"529.0\">60</text></g><g class=\"guides\"><path class=\"guide line\" d=\"M651.020702 0.000000 v514.000000\"/><text class=\"\" x=\"651.0207015871864\" y=\"529.0\">70</text></g></g><g class=\"series serie-2 color-2\"><g class=\"bars\"><g class=\"bar\"><rect class=\"rect reactive tooltip-trigger\" height=\"127.5774358974359\" rx=\"0\" ry=\"0\" width=\"661.1538461538461\" x=\"13.223076923076974\" y=\"338.1856410256411\"/><desc class=\"value\">72.56340795</desc><desc class=\"x centered\">343.8</desc><desc class=\"y centered\">401.97435897435906</desc></g></g></g><g class=\"series serie-1 color-1\"><g class=\"bars\"><g class=\"bar\"><rect class=\"rect reactive tooltip-trigger\" height=\"127.5774358974359\" rx=\"0\" ry=\"0\" width=\"241.4009653450896\" x=\"13.223076923076917\" y=\"193.21128205128213\"/><desc class=\"value\">26.49440343</desc><desc class=\"x centered\">133.92355959562173</desc><desc class=\"y centered\">257.0000000000001</desc></g></g></g><g class=\"series serie-0 color-0\"><g class=\"bars\"><g class=\"bar\"><rect class=\"rect reactive tooltip-trigger\" height=\"127.5774358974359\" rx=\"0\" ry=\"0\" width=\"8.584652306934924\" x=\"13.223076923076924\" y=\"48.236923076923105\"/><desc class=\"value\">0.9421886163</desc><desc class=\"x centered\">17.515403076544388</desc><desc class=\"y centered\">112.02564102564105</desc></g></g></g></g><g class=\"titles\"><text class=\"title plot_title\" x=\"400.0\" y=\"26\">Long, medium, and short routes</text></g><g class=\"plot overlay\" transform=\"translate(92, 46)\"><g class=\"series serie-2 color-2\"/><g class=\"series serie-1 color-1\"/><g class=\"series serie-0 color-0\"/></g><g class=\"plot text-overlay\" transform=\"translate(92, 46)\"><g class=\"series serie-2 color-2\"/><g class=\"series serie-1 color-1\"/><g class=\"series serie-0 color-0\"/></g><g class=\"plot tooltip-overlay\" transform=\"translate(92, 46)\"><g class=\"tooltip\" style=\"opacity: 0\" transform=\"translate(0 0)\"><rect class=\"tooltip-box\" height=\"0\" rx=\"0\" ry=\"0\" width=\"0\"/><g class=\"text\"/></g></g><g class=\"legends\" transform=\"translate(10, 56)\"><g class=\"legend reactive activate-serie\" id=\"activate-serie-0\"><rect class=\"color-0 reactive\" height=\"12\" width=\"12\" x=\"0.0\" y=\"1.0\"/><text x=\"17.0\" y=\"11.2\">Long</text></g><g class=\"legend reactive activate-serie\" id=\"activate-serie-1\"><rect class=\"color-1 reactive\" height=\"12\" width=\"12\" x=\"0.0\" y=\"22.0\"/><text x=\"17.0\" y=\"32.2\">Medium</text></g><g class=\"legend reactive activate-serie\" id=\"activate-serie-2\"><rect class=\"color-2 reactive\" height=\"12\" width=\"12\" x=\"0.0\" y=\"43.0\"/><text x=\"17.0\" y=\"53.2\">Short</text></g></g><g class=\"legends\" transform=\"translate(790, 56)\"/></g></svg>"
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "K0Z4e4r_XOCP",
        "colab_type": "text"
      },
      "source": [
        "Matplotlib / Seaborn Scatter Plots"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ia2uNCnnW0ml",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "outputId": "2b318305-1f3c-4ecc-8148-ea032165ccb5"
      },
      "source": [
        "name_lengths = airlines[\"name\"].apply(lambda x: len(str(x)))\n",
        "plt.scatter(airlines[\"id\"].astype(int), name_lengths)"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f491634e6d8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ASG4llRpXUET",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import seaborn"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cQeY_UQPXUUq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "outputId": "273a156d-6109-4f7a-9641-3e5dfaaa4784"
      },
      "source": [
        "data = pandas.DataFrame({\"lengths\": name_lengths, \"ids\": airlines[\"id\"].astype(int)})\n",
        "seaborn.jointplot(x=\"ids\", y=\"lengths\", data=data)"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.JointGrid at 0x7f4916f2deb8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAaUAAAGoCAYAAADmTPpwAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAgAElEQVR4nO3df5AeV3kn+u8zo1fWSBiNBIqxBwnL\nxCUBEfKQWSRWVG5kMDKQxLNc/8DYWe9eblx1N7sLhszuuKKNTUpVFlcJJFubyl2zcHGujfAPzNgg\nQDi2qNR6kVgZSRbG0hobW2b8S9ga2XjG1mjmuX+83a97evp0n+63++3T/X4/VVMavT+6T5/3x5l+\nztPPEVUFERGRC3rKbgAREZGPgxIRETmDgxIRETmDgxIRETmDgxIRETljQdkNsMQUQSKqEym7Aa7i\nmRIRETmDgxIRETmjKuG7TL6x71jZTXDGpzasKrsJRESJeKZERETO4KBERETOqHX4jt5gCmUyrEdE\nLuGZEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYOD\nEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhER\nOYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYOD\nEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhEROYODEhER\nOYODEhEROYODEhEROWNB2Q0gour7xr5jkbd/asOqDreEqo6DEhHVXtSgyQHTTRyUiDLiFx1R/jgo\nEVGkIkNyRQ3opjZTdXBQolpL+8Xa6bOfKp5tdfqL3+UBzPXXqoo4KBE5pluTBniWQwAHJaqgbv3y\n6tbBKkq3vge6AQelLlfkhzvNl6ULIaEit9vpEKBJpwcwDh6Ulqhq2W1IJCI/APDWDE99K4Bf59yc\nKmI/NLEfmtgPTWX2w69V9eKS9u20SgxKWYnIflUdKrsdZWM/NLEfmtgPTewHN7HMEBEROYODEhER\nOaPug9LNZTfAEeyHJvZDE/uhif3goFrPKRERUbXU/UyJiIgqhIMSERE5g4MSERE5g4MSERE5oxKD\n0sUXX6wA+MMf/vCnLj/Wavr9Z1SJQenXv2ZFFCLqTt32/VeJQYmIiLoDByUiInIGByUiInIGByUi\nInIGByUiInIGByUiInIGByUiInIGByUiInIGByUiInIGByUiInLGgrIbUDdjB8axY/dRPDMxhXP6\n+zCyZQ2GBwfKbhYRUSVwUMrR2IFxXH/3YUxNzwAAxiemcP3dhwGAAxMRkQWG73K0Y/fR1oDkm5qe\nwY7dR0tqERFRtRQ6KInIdSLyiIj8TER2isgiEVktIvtE5BcicruILCyyDZ30zMRUqtuJiGiuwgYl\nERkA8O8BDKnq7wDoBfBJAF8E8GVV/W0AJwB8uqg2dNo5/X2pbiciormKDt8tANAnIgsALAbwLIAL\nAdzl3X8LgOGC29AxI1vWoK/RO+e2vkYvRrasKalFRETVUtigpKrjAP4KwDE0B6OTAB4CMKGqp72H\n/QpAZAaAiFwrIvtFZP/x48eLamauhgcHcNMn1mGgvw8CYKC/Dzd9Yh2THIgolSp+/+VFVFOtzGu/\nYZFlAL4F4AoAEwDuRPMM6UYvdAcRWQng+154z2hoaEj3799fSDuJiEogtg+s6fef8fiLDN99GMAv\nVfW4qk4DuBvAJgD9XjgPAN4OYLzANhARUYUUOSgdA7BRRBaLiAD4EICfA9gD4FLvMdcAuKfANhAR\nUYUUOae0D81w3U8BHPb2dTOA/wjgcyLyCwBvAfDVotpARETVUmhFB1W9AcANoZufAPD+IvdLRETV\nxIoORETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5K\nRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETk\nDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkDA5KRETkjMIGJRFZIyIH\nAz8vi8hnRWS5iNwnIo95/y4rqg1ERFQthQ1KqnpUVS9Q1QsA/C6ASQDfBjAK4H5VPR/A/d7/iYiI\nOha++xCAx1X1KQCXALjFu/0WAMMdagMRETmuU4PSJwHs9H4/S1Wf9X5/DsBZUU8QkWtFZL+I7D9+\n/Hgn2khE5IRu/v4rfFASkYUA/gjAneH7VFUBaNTzVPVmVR1S1aEVK1YU3EoiInd08/dfJ86UPgrg\n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\n",
            "text/plain": [
              "<Figure size 432x432 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jTOzExS2XcXD",
        "colab_type": "text"
      },
      "source": [
        "5 MPLtoolkit basemap X"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Pa4BbrqIXUXw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "e6378db1-d5f3-40f7-daf2-053d9e23333a"
      },
      "source": [
        "# this is required for Basemap\n",
        "#\n",
        "!apt-get install libgeos-3.5.0\n",
        "!apt-get install libgeos-dev\n",
        "!pip install https://github.com/matplotlib/basemap/archive/master.zip"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Reading package lists... Done\n",
            "Building dependency tree       \n",
            "Reading state information... Done\n",
            "E: Unable to locate package libgeos-3.5.0\n",
            "E: Couldn't find any package by glob 'libgeos-3.5.0'\n",
            "E: Couldn't find any package by regex 'libgeos-3.5.0'\n",
            "Reading package lists... Done\n",
            "Building dependency tree       \n",
            "Reading state information... Done\n",
            "The following package was automatically installed and is no longer required:\n",
            "  libnvidia-common-430\n",
            "Use 'apt autoremove' to remove it.\n",
            "Suggested packages:\n",
            "  libgdal-doc\n",
            "The following NEW packages will be installed:\n",
            "  libgeos-dev\n",
            "0 upgraded, 1 newly installed, 0 to remove and 16 not upgraded.\n",
            "Need to get 73.1 kB of archives.\n",
            "After this operation, 486 kB of additional disk space will be used.\n",
            "Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libgeos-dev amd64 3.6.2-1build2 [73.1 kB]\n",
            "Fetched 73.1 kB in 0s (184 kB/s)\n",
            "Selecting previously unselected package libgeos-dev.\n",
            "(Reading database ... 134485 files and directories currently installed.)\n",
            "Preparing to unpack .../libgeos-dev_3.6.2-1build2_amd64.deb ...\n",
            "Unpacking libgeos-dev (3.6.2-1build2) ...\n",
            "Setting up libgeos-dev (3.6.2-1build2) ...\n",
            "Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n",
            "Collecting https://github.com/matplotlib/basemap/archive/master.zip\n",
            "\u001b[?25l  Downloading https://github.com/matplotlib/basemap/archive/master.zip (133.1MB)\n",
            "\u001b[K     |████████████████████████████████| 133.1MB 72kB/s \n",
            "\u001b[?25hRequirement already satisfied: matplotlib!=3.0.1,>=1.0.0 in /usr/local/lib/python3.6/dist-packages (from basemap==1.2.1) (3.1.2)\n",
            "Requirement already satisfied: numpy>=1.2.1 in /usr/local/lib/python3.6/dist-packages (from basemap==1.2.1) (1.17.5)\n",
            "Collecting pyproj>=1.9.3\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d6/70/eedc98cd52b86de24a1589c762612a98bea26cde649ffdd60c1db396cce8/pyproj-2.4.2.post1-cp36-cp36m-manylinux2010_x86_64.whl (10.1MB)\n",
            "\u001b[K     |████████████████████████████████| 10.1MB 2.8MB/s \n",
            "\u001b[?25hCollecting pyshp>=1.2.0\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/27/16/3bf15aa864fb77845fab8007eda22c2bd67bd6c1fd13496df452c8c43621/pyshp-2.1.0.tar.gz (215kB)\n",
            "\u001b[K     |████████████████████████████████| 225kB 44.3MB/s \n",
            "\u001b[?25hRequirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from basemap==1.2.1) (1.12.0)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.1,>=1.0.0->basemap==1.2.1) (2.4.6)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.1,>=1.0.0->basemap==1.2.1) (1.1.0)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.1,>=1.0.0->basemap==1.2.1) (2.6.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib!=3.0.1,>=1.0.0->basemap==1.2.1) (0.10.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from kiwisolver>=1.0.1->matplotlib!=3.0.1,>=1.0.0->basemap==1.2.1) (45.1.0)\n",
            "Building wheels for collected packages: basemap, pyshp\n",
            "  Building wheel for basemap (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for basemap: filename=basemap-1.2.1-cp36-cp36m-linux_x86_64.whl size=121756046 sha256=808950d5ed7b0fe23dc7bdc1d769d90e564e47ee45ce6a1fd90c590eb3abe40a\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-tuyikau9/wheels/98/4a/fc/ce719b75d97e646645c225f3332b1b217536100314922e9572\n",
            "  Building wheel for pyshp (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyshp: filename=pyshp-2.1.0-cp36-none-any.whl size=32609 sha256=9ab40f03aadf01c337a92d9c45bb3acc4e25af067bc60f594c14136eac4d1ef6\n",
            "  Stored in directory: /root/.cache/pip/wheels/a6/0c/de/321b5192ad416b328975a2f0385f72c64db4656501eba7cc1a\n",
            "Successfully built basemap pyshp\n",
            "Installing collected packages: pyproj, pyshp, basemap\n",
            "Successfully installed basemap-1.2.1 pyproj-2.4.2.post1 pyshp-2.1.0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "mpl_toolkits"
                ]
              }
            }
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5C9okR_GXUa7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from pylab import rcParams\n",
        "rcParams['figure.figsize'] = 12, 10"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mNR_wzj9XUeD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Import the basemap package\n",
        "from mpl_toolkits.basemap import Basemap"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ErnTV1yZXUSq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "outputId": "c6751bc4-78dd-4748-b825-9b70e0bc64fd"
      },
      "source": [
        "# Create a map on which to draw.  We're using a mercator projection, and showing the whole world.\n",
        "m = Basemap(projection='merc',llcrnrlat=-80,urcrnrlat=80,llcrnrlon=-180,urcrnrlon=180,lat_ts=20,resolution='c')\n",
        "# Draw coastlines, and the edges of the map.\n",
        "m.drawcoastlines()\n",
        "m.drawmapboundary()\n",
        "# Convert latitude and longitude to x and y coordinates\n",
        "x, y = m(list(airports[\"longitude\"].astype(float)), list(airports[\"latitude\"].astype(float)))\n",
        "# Use matplotlib to draw the points onto the map.\n",
        "m.scatter(x,y,1,marker='o',color='red')\n",
        "# Show the plot.\n",
        "plt.show()"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nKaFkjH0eMjIySFdXl+Lj4+VaXiwWk6OjI23durWUS1b61q1bR/r6+jR16lR68uQJERElJibS1q1b\nqWPHjmRhYUFz586lJ0+eUFxcHG3cuJE6d+5MJiYmNGHCBBo2bBi1atWKtLW1ycTEhGxsbCg6Olqh\nZYyJiaG5c+eSoaEhTZgwIbucKSkp5O3tTUZGRrRixQqi6GgiPz/hNYtIJKJNmzZRo0aNqFWrVrR9\n+3ZKTU0tcH+RkZHUrVs30tLSIj8/P1q4cCGZmZlRq1atqFatWlS9enW6ePEiEREFBASQsbEx7du3\nj4iI/vvvPzIxMaGXL18W61hLEsi+evWKZs+eXaz9fg44eGWsHHF0dCQfHx86f/68XMvb2dnR33//\nXcqlYky13b59m+zt7alr165048YNsrW1pdOnT8u9fr169eju3bulWELl2LNnDzVt2pTS09Nlfn7n\nzh2aPn06GRkZkZ6eHg0ZMoSOHj36yfIikYiePXtGycnJpVbW2NhYmjdvHhkZGdHo0aPJysqKBg0a\nRM+fPxcW8PMTwhQ/v0/WFYlEFBQURD179iQzMzPy9vame/fu0bVr1ygoKIh2795Nq1evprlz55Kp\nqSn5+PhQWFgYWVpakoeHB4WFhRGR8O8VERGRa9s3btygOnXq0MyZM6lJkyYUEBCgkONNSEiggICA\n7EDW2dmZ/P396dGjR+Tt7U1ffvklhYaGEhHR06dPqV69euTk5KSQfauigoJX7vPKmJL4+/vjzJkz\nePXqFaZPn44BAwYUug4RwdzcHKGhobC0tFRCKRlTPZmZmTA0NMSIESPQpk0bzJs3DwAwffp0zJkz\np9D1ExMToa+vD19fX3zzzTfQ09Mr7SIrVFxcHIKCgnDkyBGcPHkSzZo1w9GjRwucCSs1NRUZGRnl\nYuKTuLg4bN68GS1btkTv3r1zPoiJAfz9hSmwjY3zXT8sLAyrV6/GmTNnYGBgkKs/qpGREfr06YP2\n7dsXqUwxMTEYMWIEjIyMsidbUKQPHz7g2LFjOHDgAC5cuIBBgwahbdu2mDdvHubMmYMVK1YgMjIS\nJ0+eRI8ePRS6b1XBM2wxVg4cPXoUAwYMgFgsxs6dOzF69OhC13nx4gU6dOiAqKgohVeejKmy1atX\nIzw8HOPHj0fr1q0RFBSUPdFH06ZNMX/+fNSpUwezZs2Sa3u3bt3CkiVLcPLkSXzzzTf49ttvYWpq\n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\nREREZDD+D/+KRD2xcQHkAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 864x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Z2hxl49oXsEO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "outputId": "cd6e80f2-d668-48e7-e61b-5e0ab5c24093"
      },
      "source": [
        "#Great Circle Routes\n",
        "# Make a base map with a mercator projection.\n",
        "# Draw the coastlines.\n",
        "m = Basemap(projection='merc',llcrnrlat=-80,urcrnrlat=80,llcrnrlon=-180,urcrnrlon=180,lat_ts=20,resolution='c')\n",
        "m.drawcoastlines()\n",
        "# Iterate through the first 3000 rows.\n",
        "for name, row in routes[:3000].iterrows():\n",
        "    try:\n",
        "        # Get the source and dest airports.\n",
        "        source = airports[airports[\"id\"] == row[\"source_id\"]].iloc[0]\n",
        "        dest = airports[airports[\"id\"] == row[\"dest_id\"]].iloc[0]\n",
        "        # Don't draw overly long routes.\n",
        "        if abs(float(source[\"longitude\"]) - float(dest[\"longitude\"])) < 90:\n",
        "            # Draw a great circle between source and dest airports.\n",
        "            m.drawgreatcircle(float(source[\"longitude\"]), float(source[\"latitude\"]), float(dest[\"longitude\"]), float(dest[\"latitude\"]),linewidth=1,color='b')\n",
        "    except (ValueError, IndexError):\n",
        "        pass\n",
        "    # Show the map.\n",
        "plt.show()"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 864x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hQ9rlb5AXxCz",
        "colab_type": "text"
      },
      "source": [
        "6 Folium - Plotting Cities on Map"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KtVrG4NTXsVm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 239
        },
        "outputId": "1739592c-62c5-4f81-9eda-33770f1ea563"
      },
      "source": [
        "!pip install folium"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: folium in /usr/local/lib/python3.6/dist-packages (0.8.3)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from folium) (1.12.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from folium) (1.17.5)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from folium) (2.21.0)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.6/dist-packages (from folium) (2.11.1)\n",
            "Requirement already satisfied: branca>=0.3.0 in /usr/local/lib/python3.6/dist-packages (from folium) (0.3.1)\n",
            "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->folium) (3.0.4)\n",
            "Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->folium) (1.24.3)\n",
            "Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->folium) (2.8)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->folium) (2019.11.28)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.6/dist-packages (from jinja2->folium) (1.1.1)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_MuMtN2fXsaB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#https://alysivji.github.io/getting-started-with-folium.html\n",
        "#sample code taken from this site\n",
        "#\n",
        "import folium\n",
        "from folium import plugins\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "%matplotlib inline"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0BfufH_YXsd3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 571
        },
        "outputId": "e7d49094-7847-40e8-86c7-2c31447500e0"
      },
      "source": [
        "airports_map = folium.Map(location=[30, 0], zoom_start=2)\n",
        "airports_map"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgPHNjcmlwdD5MX1BSRUZFUl9DQU5WQVM9ZmFsc2U7IExfTk9fVE9VQ0g9ZmFsc2U7IExfRElTQUJMRV8zRD1mYWxzZTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktMS4xMi40Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvTGVhZmxldC5hd2Vzb21lLW1hcmtlcnMvMi4wLjIvbGVhZmxldC5hd2Vzb21lLW1hcmtlcnMuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vZm9udC1hd2Vzb21lLzQuNi4zL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9yYXdjZG4uZ2l0aGFjay5jb20vcHl0aG9uLXZpc3VhbGl6YXRpb24vZm9saXVtL21hc3Rlci9mb2xpdW0vdGVtcGxhdGVzL2xlYWZsZXQuYXdlc29tZS5yb3RhdGUuY3NzIi8+CiAgICA8c3R5bGU+aHRtbCwgYm9keSB7d2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlO21hcmdpbjogMDtwYWRkaW5nOiAwO308L3N0eWxlPgogICAgPHN0eWxlPiNtYXAge3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2JvdHRvbTowO3JpZ2h0OjA7bGVmdDowO308L3N0eWxlPgogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLAogICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgIDxzdHlsZT4jbWFwXzQwMTEwNGM5MDU5ZTQ5Njc5NzExMDJjNDZlZGRjZTVmIHsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgd2lkdGg6IDEwMC4wJTsKICAgICAgICBoZWlnaHQ6IDEwMC4wJTsKICAgICAgICBsZWZ0OiAwLjAlOwogICAgICAgIHRvcDogMC4wJTsKICAgICAgICB9CiAgICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0iZm9saXVtLW1hcCIgaWQ9Im1hcF80MDExMDRjOTA1OWU0OTY3OTcxMTAyYzQ2ZWRkY2U1ZiIgPjwvZGl2Pgo8L2JvZHk+CjxzY3JpcHQ+ICAgIAogICAgCiAgICAKICAgICAgICB2YXIgYm91bmRzID0gbnVsbDsKICAgIAoKICAgIHZhciBtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYgPSBMLm1hcCgKICAgICAgICAnbWFwXzQwMTEwNGM5MDU5ZTQ5Njc5NzExMDJjNDZlZGRjZTVmJywgewogICAgICAgIGNlbnRlcjogWzMwLCAwXSwKICAgICAgICB6b29tOiAyLAogICAgICAgIG1heEJvdW5kczogYm91bmRzLAogICAgICAgIGxheWVyczogW10sCiAgICAgICAgd29ybGRDb3B5SnVtcDogZmFsc2UsCiAgICAgICAgY3JzOiBMLkNSUy5FUFNHMzg1NywKICAgICAgICB6b29tQ29udHJvbDogdHJ1ZSwKICAgICAgICB9KTsKCgogICAgCiAgICB2YXIgdGlsZV9sYXllcl9mY2UxNGZjNTk0YzU0ZmQzOTc5OGVkNGNhYWQ4ZmRiZCA9IEwudGlsZUxheWVyKAogICAgICAgICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsCiAgICAgICAgewogICAgICAgICJhdHRyaWJ1dGlvbiI6IG51bGwsCiAgICAgICAgImRldGVjdFJldGluYSI6IGZhbHNlLAogICAgICAgICJtYXhOYXRpdmVab29tIjogMTgsCiAgICAgICAgIm1heFpvb20iOiAxOCwKICAgICAgICAibWluWm9vbSI6IDAsCiAgICAgICAgIm5vV3JhcCI6IGZhbHNlLAogICAgICAgICJvcGFjaXR5IjogMSwKICAgICAgICAic3ViZG9tYWlucyI6ICJhYmMiLAogICAgICAgICJ0bXMiOiBmYWxzZQp9KS5hZGRUbyhtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYpOwo8L3NjcmlwdD4=\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
            ],
            "text/plain": [
              "<folium.folium.Map at 0x7f490f74fc18>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O0MkIPb5XsYY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#airport names have non-ascii characters\n",
        "#replacing non-ascii with blanks\n",
        "#https://stackoverflow.com/questions/36340627/removing-non-ascii-characters-and-replacing-with-spaces-from-pandas-data-frame\n",
        "#\n",
        "from string import printable\n",
        "st = set(printable)\n",
        "airports[\"name\"] = airports[\"name\"].apply(lambda x: ''.join([\" \" if  i not in  st else i for i in x]))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iL7cFIfiXsTo",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Plotting all airports is difficult. System get hung\n",
        "# https://stackoverflow.com/questions/15923826/random-row-selection-in-pandas-dataframe\n",
        "\n",
        "# Randomly sample 7 elements from your dataframe\n",
        "airports_R = airports.sample(n=10)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fy16GlsvYTD-",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 571
        },
        "outputId": "9fc88b26-a9c4-4332-aecf-275626a6b60a"
      },
      "source": [
        "# mark each station as a point\n",
        "for index, row in airports_R.iterrows():\n",
        "    if row[\"name\"] != \"South Pole Station\":\n",
        "        folium.CircleMarker([float(row['latitude']), float(row['longitude'])],\n",
        "                        radius=2,\n",
        "                        popup=row['name'],\n",
        "                        fill_color=\"red\", # divvy color\n",
        "                       ).add_to(airports_map)\n",
        "airports_map"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgPHNjcmlwdD5MX1BSRUZFUl9DQU5WQVM9ZmFsc2U7IExfTk9fVE9VQ0g9ZmFsc2U7IExfRElTQUJMRV8zRD1mYWxzZTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktMS4xMi40Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvTGVhZmxldC5hd2Vzb21lLW1hcmtlcnMvMi4wLjIvbGVhZmxldC5hd2Vzb21lLW1hcmtlcnMuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS40LjAvZGlzdC9sZWFmbGV0LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vZm9udC1hd2Vzb21lLzQuNi4zL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9yYXdjZG4uZ2l0aGFjay5jb20vcHl0aG9uLXZpc3VhbGl6YXRpb24vZm9saXVtL21hc3Rlci9mb2xpdW0vdGVtcGxhdGVzL2xlYWZsZXQuYXdlc29tZS5yb3RhdGUuY3NzIi8+CiAgICA8c3R5bGU+aHRtbCwgYm9keSB7d2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlO21hcmdpbjogMDtwYWRkaW5nOiAwO308L3N0eWxlPgogICAgPHN0eWxlPiNtYXAge3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2JvdHRvbTowO3JpZ2h0OjA7bGVmdDowO308L3N0eWxlPgogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLAogICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgIDxzdHlsZT4jbWFwXzQwMTEwNGM5MDU5ZTQ5Njc5NzExMDJjNDZlZGRjZTVmIHsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgd2lkdGg6IDEwMC4wJTsKICAgICAgICBoZWlnaHQ6IDEwMC4wJTsKICAgICAgICBsZWZ0OiAwLjAlOwogICAgICAgIHRvcDogMC4wJTsKICAgICAgICB9CiAgICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0iZm9saXVtLW1hcCIgaWQ9Im1hcF80MDExMDRjOTA1OWU0OTY3OTcxMTAyYzQ2ZWRkY2U1ZiIgPjwvZGl2Pgo8L2JvZHk+CjxzY3JpcHQ+ICAgIAogICAgCiAgICAKICAgICAgICB2YXIgYm91bmRzID0gbnVsbDsKICAgIAoKICAgIHZhciBtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYgPSBMLm1hcCgKICAgICAgICAnbWFwXzQwMTEwNGM5MDU5ZTQ5Njc5NzExMDJjNDZlZGRjZTVmJywgewogICAgICAgIGNlbnRlcjogWzMwLCAwXSwKICAgICAgICB6b29tOiAyLAogICAgICAgIG1heEJvdW5kczogYm91bmRzLAogICAgICAgIGxheWVyczogW10sCiAgICAgICAgd29ybGRDb3B5SnVtcDogZmFsc2UsCiAgICAgICAgY3JzOiBMLkNSUy5FUFNHMzg1NywKICAgICAgICB6b29tQ29udHJvbDogdHJ1ZSwKICAgICAgICB9KTsKCgogICAgCiAgICB2YXIgdGlsZV9sYXllcl9mY2UxNGZjNTk0YzU0ZmQzOTc5OGVkNGNhYWQ4ZmRiZCA9IEwudGlsZUxheWVyKAogICAgICAgICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsCiAgICAgICAgewogICAgICAgICJhdHRyaWJ1dGlvbiI6IG51bGwsCiAgICAgICAgImRldGVjdFJldGluYSI6IGZhbHNlLAogICAgICAgICJtYXhOYXRpdmVab29tIjogMTgsCiAgICAgICAgIm1heFpvb20iOiAxOCwKICAgICAgICAibWluWm9vbSI6IDAsCiAgICAgICAgIm5vV3JhcCI6IGZhbHNlLAogICAgICAgICJvcGFjaXR5IjogMSwKICAgICAgICAic3ViZG9tYWlucyI6ICJhYmMiLAogICAgICAgICJ0bXMiOiBmYWxzZQp9KS5hZGRUbyhtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYpOwogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzJkNTBhNmM0YzQ4ODQ0MmFiNmY5N2JhODRiMWU3OWRlID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNTAuOTkxNjA0LCAxMC40Nzk3M10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjMzM4OGZmIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAicmVkIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAyLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIC5hZGRUbyhtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZDhiMmI3NTVlOWE2NGM2ZmJiZDQ4MDU3Yjg5NGM1MTkgPSBMLnBvcHVwKHttYXhXaWR0aDogJzEwMCUnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNDc5ZTdiN2MwOTQ4NDJhNWE4ZDNiMmFkMThkNjA5ZmYgPSAkKGA8ZGl2IGlkPSJodG1sXzQ3OWU3YjdjMDk0ODQyYTVhOGQzYjJhZDE4ZDYwOWZmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5FaXNlbmFjaC1LaW5kZWwgQWlycG9ydDwvZGl2PmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZDhiMmI3NTVlOWE2NGM2ZmJiZDQ4MDU3Yjg5NGM1MTkuc2V0Q29udGVudChodG1sXzQ3OWU3YjdjMDk0ODQyYTVhOGQzYjJhZDE4ZDYwOWZmKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzJkNTBhNmM0YzQ4ODQ0MmFiNmY5N2JhODRiMWU3OWRlLmJpbmRQb3B1cChwb3B1cF9kOGIyYjc1NWU5YTY0YzZmYmJkNDgwNTdiODk0YzUxOSkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYWQ2NTBlYWFhYzYxNDI3MDlhNmNlYmNhNzQzNDVlYjYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0NS44ODc3OTgzMDkzMjYxNywgLTAuOTgzMDU2MDA4ODE1NzY1NF0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjMzM4OGZmIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAicmVkIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAyLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIC5hZGRUbyhtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMjM1MDUzNGNhZWI3NDA2MmI3N2Q0NGEwZTA1ZGJkZTQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzEwMCUnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNDkzOWNkYWFkNWZlNGNlNTkzMTcyNGIwMGZiOWQwMTYgPSAkKGA8ZGl2IGlkPSJodG1sXzQ5MzljZGFhZDVmZTRjZTU5MzE3MjRiMDBmYjlkMDE2IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5Sb2NoZWZvcnQtU2FpbnQtQWduYW50IChCQSA3MjEpIEFpcnBvcnQ8L2Rpdj5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzIzNTA1MzRjYWViNzQwNjJiNzdkNDRhMGUwNWRiZGU0LnNldENvbnRlbnQoaHRtbF80OTM5Y2RhYWQ1ZmU0Y2U1OTMxNzI0YjAwZmI5ZDAxNik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9hZDY1MGVhYWFjNjE0MjcwOWE2Y2ViY2E3NDM0NWViNi5iaW5kUG9wdXAocG9wdXBfMjM1MDUzNGNhZWI3NDA2MmI3N2Q0NGEwZTA1ZGJkZTQpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzFiNzUzNThmYjNkNDRhOThiNzc1YWU2ZTc2ZjRlOTU3ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbMTIuNTgzNiwgLTgxLjcxMTJdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzMzODhmZiIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogInJlZCIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMiwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAuYWRkVG8obWFwXzQwMTEwNGM5MDU5ZTQ5Njc5NzExMDJjNDZlZGRjZTVmKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzc1N2IzMDViYTJiNjQ4N2M4ZTc0YTBiYzMzYWU2MjFjID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcxMDAlJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzYyNDQxYjM2M2ZhNDQ0NGVhNDc4YWFiZGQzYTUxZTU2ID0gJChgPGRpdiBpZD0iaHRtbF82MjQ0MWIzNjNmYTQ0NDRlYTQ3OGFhYmRkM2E1MWU1NiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+R3VzdGF2byBSb2phcyBQaW5pbGxhIEludGVybmF0aW9uYWwgQWlycG9ydDwvZGl2PmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNzU3YjMwNWJhMmI2NDg3YzhlNzRhMGJjMzNhZTYyMWMuc2V0Q29udGVudChodG1sXzYyNDQxYjM2M2ZhNDQ0NGVhNDc4YWFiZGQzYTUxZTU2KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzFiNzUzNThmYjNkNDRhOThiNzc1YWU2ZTc2ZjRlOTU3LmJpbmRQb3B1cChwb3B1cF83NTdiMzA1YmEyYjY0ODdjOGU3NGEwYmMzM2FlNjIxYykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNmZlZTdhNzk4ZjY5NGQxNDllMDRlZmFiM2JiNzJjYWUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0Ny45NjExMDE1MzIsIC05Ny40MDExOTkzNDA4XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiMzMzg4ZmYiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICJyZWQiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDIsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgLmFkZFRvKG1hcF80MDExMDRjOTA1OWU0OTY3OTcxMTAyYzQ2ZWRkY2U1Zik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9mMGJmYTI2N2MwOGU0OTI3OWEyNmQzNDhkMTVmODZjMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMTAwJScKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF85OTc2OWY4MTA3ZGQ0NGY4Yjg0Y2U5NzQ3YTRiZGQxYyA9ICQoYDxkaXYgaWQ9Imh0bWxfOTk3NjlmODEwN2RkNDRmOGI4NGNlOTc0N2E0YmRkMWMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkdyYW5kIEZvcmtzIEFpciBGb3JjZSBCYXNlPC9kaXY+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9mMGJmYTI2N2MwOGU0OTI3OWEyNmQzNDhkMTVmODZjMy5zZXRDb250ZW50KGh0bWxfOTk3NjlmODEwN2RkNDRmOGI4NGNlOTc0N2E0YmRkMWMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNmZlZTdhNzk4ZjY5NGQxNDllMDRlZmFiM2JiNzJjYWUuYmluZFBvcHVwKHBvcHVwX2YwYmZhMjY3YzA4ZTQ5Mjc5YTI2ZDM0OGQxNWY4NmMzKQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl82MDdkMjZlMmJkNDM0OWNkYTJjZjcyYmE1ODllZjE3YyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzI1Ljk0NDcwMDI0MTEsIDEzMS4zMjY5OTU4NV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjMzM4OGZmIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAicmVkIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAyLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIC5hZGRUbyhtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZDE5MGYwZjQ0ZWY3NDY2ZWIzNzY3N2I3MTQ4NzJkNzAgPSBMLnBvcHVwKHttYXhXaWR0aDogJzEwMCUnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYTBhYTQ3YzlhOTkyNGEyN2E4NmI3ODE1ZDRlYmU5YWYgPSAkKGA8ZGl2IGlkPSJodG1sX2EwYWE0N2M5YTk5MjRhMjdhODZiNzgxNWQ0ZWJlOWFmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5LaXRhZGFpdG8gQWlycG9ydDwvZGl2PmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZDE5MGYwZjQ0ZWY3NDY2ZWIzNzY3N2I3MTQ4NzJkNzAuc2V0Q29udGVudChodG1sX2EwYWE0N2M5YTk5MjRhMjdhODZiNzgxNWQ0ZWJlOWFmKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzYwN2QyNmUyYmQ0MzQ5Y2RhMmNmNzJiYTU4OWVmMTdjLmJpbmRQb3B1cChwb3B1cF9kMTkwZjBmNDRlZjc0NjZlYjM3Njc3YjcxNDg3MmQ3MCkKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYWU1Mjg1YWJhOWQ2NDM0OTg3MTQ2MTQxMjUxMzA1NTUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs2MS44MzE5NDM1MTE5NjI4OSwgMzQuMjk1NTU1MTE0NzQ2MDk0XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiMzMzg4ZmYiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICJyZWQiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDIsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgLmFkZFRvKG1hcF80MDExMDRjOTA1OWU0OTY3OTcxMTAyYzQ2ZWRkY2U1Zik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF80NjExNzgxNWU5MWI0OTkzODhkZDEwNzVmZDAzZTJhNyA9IEwucG9wdXAoe21heFdpZHRoOiAnMTAwJScKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9hZjU5OGEzM2MwNTE0MGExOTQ5YjNjNjc5NzRhOTEwZiA9ICQoYDxkaXYgaWQ9Imh0bWxfYWY1OThhMzNjMDUxNDBhMTk0OWIzYzY3OTc0YTkxMGYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPlBlc2tpIEFpcnBvcnQ8L2Rpdj5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzQ2MTE3ODE1ZTkxYjQ5OTM4OGRkMTA3NWZkMDNlMmE3LnNldENvbnRlbnQoaHRtbF9hZjU5OGEzM2MwNTE0MGExOTQ5YjNjNjc5NzRhOTEwZik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9hZTUyODVhYmE5ZDY0MzQ5ODcxNDYxNDEyNTEzMDU1NS5iaW5kUG9wdXAocG9wdXBfNDYxMTc4MTVlOTFiNDk5Mzg4ZGQxMDc1ZmQwM2UyYTcpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2M0MDQ5ZTQ1YmJmZTQ4ODM5ZTQzZjJiYzI3ZmQwNzViID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbLTE5LjYzNDM5OTQxNDA2MjUsIDEzNC4xODI5OTg2NTcyMjY1Nl0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjMzM4OGZmIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAicmVkIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAyLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIC5hZGRUbyhtYXBfNDAxMTA0YzkwNTllNDk2Nzk3MTEwMmM0NmVkZGNlNWYpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMGU5Y2E5MmE1M2I2NDVlODg0YzE5MzVhMmNjMDBjMGEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzEwMCUnCiAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfOTFiNGRlZjc5ZDhlNDU4MzhlNGM5NGU1YzQ5MTZiM2EgPSAkKGA8ZGl2IGlkPSJodG1sXzkxYjRkZWY3OWQ4ZTQ1ODM4ZTRjOTRlNWM0OTE2YjNhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5UZW5uYW50IENyZWVrIEFpcnBvcnQ8L2Rpdj5gKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzBlOWNhOTJhNTNiNjQ1ZTg4NGMxOTM1YTJjYzAwYzBhLnNldENvbnRlbnQoaHRtbF85MWI0ZGVmNzlkOGU0NTgzOGU0Yzk0ZTVjNDkxNmIzYSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9jNDA0OWU0NWJiZmU0ODgzOWU0M2YyYmMyN2ZkMDc1Yi5iaW5kUG9wdXAocG9wdXBfMGU5Y2E5MmE1M2I2NDVlODg0YzE5MzVhMmNjMDBjMGEpCiAgICAgICAgICAgIDsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzg2YmExMmVjNDU3YjRlNThhNzNmOWM4M2YxYzQzOTFjID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbMzcuOTQwMjAwODA1NywgLTc1LjQ2NjQwMDE0NjVdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzMzODhmZiIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogInJlZCIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMiwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAuYWRkVG8obWFwXzQwMTEwNGM5MDU5ZTQ5Njc5NzExMDJjNDZlZGRjZTVmKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzUxMzI0YjU4YjM0NTQzZmY4ZjgwZGU4MzE5Y2VjZTA3ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcxMDAlJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2U4YWMwYTNlNWJiZDRiYzU4YmU2NTQ1MjBlYTdkMGQxID0gJChgPGRpdiBpZD0iaHRtbF9lOGFjMGEzZTViYmQ0YmM1OGJlNjU0NTIwZWE3ZDBkMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+V2FsbG9wcyBGbGlnaHQgRmFjaWxpdHkgQWlycG9ydDwvZGl2PmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNTEzMjRiNThiMzQ1NDNmZjhmODBkZTgzMTljZWNlMDcuc2V0Q29udGVudChodG1sX2U4YWMwYTNlNWJiZDRiYzU4YmU2NTQ1MjBlYTdkMGQxKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzg2YmExMmVjNDU3YjRlNThhNzNmOWM4M2YxYzQzOTFjLmJpbmRQb3B1cChwb3B1cF81MTMyNGI1OGIzNDU0M2ZmOGY4MGRlODMxOWNlY2UwNykKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNDE0MTVlM2ZhMTliNGY5NWE1MTUwNzk4ZGY2ZWMwZjIgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs2MC4wMjAzMDE4MTg4NDc2NTYsIC0xMTEuOTYxOTk3OTg1ODM5ODRdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzMzODhmZiIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogInJlZCIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMiwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAuYWRkVG8obWFwXzQwMTEwNGM5MDU5ZTQ5Njc5NzExMDJjNDZlZGRjZTVmKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2RmYTRlZDcyYzkxODRmZTY4ODk2MWEzMjQ5NTgyZDg1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICcxMDAlJwogICAgICAgICAgICAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzAzYTNhODFiYTYxODRmMGM5MzAxMjk4NjdjNzMwY2RlID0gJChgPGRpdiBpZD0iaHRtbF8wM2EzYTgxYmE2MTg0ZjBjOTMwMTI5ODY3YzczMGNkZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+Rm9ydCBTbWl0aCBBaXJwb3J0PC9kaXY+YClbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9kZmE0ZWQ3MmM5MTg0ZmU2ODg5NjFhMzI0OTU4MmQ4NS5zZXRDb250ZW50KGh0bWxfMDNhM2E4MWJhNjE4NGYwYzkzMDEyOTg2N2M3MzBjZGUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNDE0MTVlM2ZhMTliNGY5NWE1MTUwNzk4ZGY2ZWMwZjIuYmluZFBvcHVwKHBvcHVwX2RmYTRlZDcyYzkxODRmZTY4ODk2MWEzMjQ5NTgyZDg1KQogICAgICAgICAgICA7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9hZWFkYjg2NThjMTA0ZGI2ODUxYWQyYWY2MGJlMmE3ZSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQwLjEyMjEwMDgzMDA5OTk5NiwgNDQuNDY1MDAwMTUyNjAwMDA1XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiMzMzg4ZmYiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICJyZWQiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDIsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgLmFkZFRvKG1hcF80MDExMDRjOTA1OWU0OTY3OTcxMTAyYzQ2ZWRkY2U1Zik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9mYjFkNWRlMWM3MGE0MzU1ODkyN2I4MjczNThiZmJkYiA9IEwucG9wdXAoe21heFdpZHRoOiAnMTAwJScKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8xZWEyM2JhNzNjYzk0ZTU5OWEwYTcyYmU1YzQ0YjYyYyA9ICQoYDxkaXYgaWQ9Imh0bWxfMWVhMjNiYTczY2M5NGU1OTlhMGE3MmJlNWM0NGI2MmMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkVyZWJ1bmkgQWlycG9ydDwvZGl2PmApWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZmIxZDVkZTFjNzBhNDM1NTg5MjdiODI3MzU4YmZiZGIuc2V0Q29udGVudChodG1sXzFlYTIzYmE3M2NjOTRlNTk5YTBhNzJiZTVjNDRiNjJjKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2FlYWRiODY1OGMxMDRkYjY4NTFhZDJhZjYwYmUyYTdlLmJpbmRQb3B1cChwb3B1cF9mYjFkNWRlMWM3MGE0MzU1ODkyN2I4MjczNThiZmJkYikKICAgICAgICAgICAgOwoKICAgICAgICAgICAgCiAgICAgICAgCjwvc2NyaXB0Pg==\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
            ],
            "text/plain": [
              "<folium.folium.Map at 0x7f490f74fc18>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ynC87JXMYZNC",
        "colab_type": "text"
      },
      "source": [
        "7 Networkx - Network Diagrams"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OlDe4A8EYTRf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Initialize the weights dictionary.\n",
        "weights = {}\n",
        "# Keep track of keys that have been added once -- we only want edges with a weight of more than 1 to keep our network size manageable.\n",
        "added_keys = []\n",
        "# Iterate through each route.\n",
        "for name, row in routes.iterrows():\n",
        "    # Extract the source and dest airport ids.\n",
        "    source = row[\"source_id\"]\n",
        "    dest = row[\"dest_id\"]\n",
        "    \n",
        "    # Create a key for the weights dictionary.\n",
        "    # This corresponds to one edge, and has the start and end of the route.\n",
        "    key = \"{0}_{1}\".format(source, dest)\n",
        "    # If the key is already in weights, increment the weight.\n",
        "    if key in weights:\n",
        "        weights[key] += 1\n",
        "    # If the key is in added keys, initialize the key in the weights dictionary, with a weight of 2.\n",
        "    elif key in added_keys:\n",
        "        weights[key] = 2\n",
        "    # If the key isn't in added_keys yet, append it.\n",
        "    # This ensures that we aren't adding edges with a weight of 1.\n",
        "    else:\n",
        "        added_keys.append(key)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EpCNCw79YTiU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Import networkx and initialize the graph.\n",
        "import networkx as nx"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZrjjwGpuYTl2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "graph = nx.Graph()\n",
        "# Keep track of added nodes in this set so we don't add twice.\n",
        "nodes = set()\n",
        "# Iterate through each edge.\n",
        "for k, weight in weights.items():\n",
        "    try:\n",
        "        # Split the source and dest ids and convert to integers.\n",
        "        source, dest = k.split(\"_\")\n",
        "        source, dest = [int(source), int(dest)]\n",
        "        # Add the source if it isn't in the nodes.\n",
        "        if source not in nodes:\n",
        "            graph.add_node(source)\n",
        "        # Add the dest if it isn't in the nodes.\n",
        "        if dest not in nodes:\n",
        "            graph.add_node(dest)\n",
        "        # Add both source and dest to the nodes set.\n",
        "        # Sets don't allow duplicates.\n",
        "        nodes.add(source)\n",
        "        nodes.add(dest)\n",
        "        \n",
        "        # Add the edge to the graph.\n",
        "        graph.add_edge(source, dest, weight=weight)\n",
        "    except (ValueError, IndexError):\n",
        "        pass\n",
        "\n",
        "pos=nx.spring_layout(graph)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "73uY7hYiYTq9",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 248
        },
        "outputId": "31cb53d7-867e-49b3-b7d7-12b93a7fccfb"
      },
      "source": [
        "# Draw the nodes and edges.\n",
        "nx.draw_networkx_nodes(graph,pos, node_color='red', node_size=10, alpha=0.8)\n",
        "nx.draw_networkx_edges(graph,pos,width=1.0,alpha=1)\n",
        "\n",
        "# Show the plot.\n",
        "plt.show()"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    }
  ]
}